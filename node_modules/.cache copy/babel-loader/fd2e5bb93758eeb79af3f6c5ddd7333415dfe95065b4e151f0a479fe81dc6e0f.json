{"ast":null,"code":"import { getStylesObject } from '@sajari/react-sdk-utils';\nimport 'react';\nimport { jsxs, jsx } from '@emotion/core/jsx-runtime';\nimport Box from '../../../Box/index.esm.js';\nimport { useComboboxContext } from '../../context.esm.js';\nimport { useTypeaheadStyles } from './styles.esm.js';\nfunction trimPrefix(str, prefix) {\n  if (str === undefined || prefix === '') {\n    return '';\n  }\n  if (str.startsWith(prefix)) {\n    return str.slice(prefix.length);\n  }\n  return '';\n}\nvar Typeahead = function Typeahead() {\n  var _useComboboxContext = useComboboxContext(),\n    mode = _useComboboxContext.mode,\n    completion = _useComboboxContext.completion,\n    inputValue = _useComboboxContext.inputValue,\n    _useComboboxContext$d = _useComboboxContext.disableDefaultStyles,\n    disableDefaultStyles = _useComboboxContext$d === void 0 ? false : _useComboboxContext$d,\n    _useComboboxContext$c = _useComboboxContext.customClassNames.typeaheadClassName,\n    typeaheadClassName = _useComboboxContext$c === void 0 ? '' : _useComboboxContext$c,\n    size = _useComboboxContext.size;\n  var styles = getStylesObject(useTypeaheadStyles({\n    size: size\n  }), disableDefaultStyles);\n  var typeaheadValue = '';\n  var hiddenText = '&#8203;';\n  if (mode === 'typeahead' && completion) {\n    typeaheadValue = trimPrefix(completion, inputValue);\n    hiddenText = completion.substring(0, completion.length - typeaheadValue.length);\n  }\n  return jsxs(Box, {\n    css: styles.container,\n    className: typeaheadClassName,\n    children: [jsx(Box, {\n      as: \"span\",\n      css: styles.hidden,\n      children: hiddenText\n    }), typeaheadValue]\n  });\n};\nexport default Typeahead;\nexport { trimPrefix };","map":{"version":3,"names":["trimPrefix","str","prefix","undefined","startsWith","slice","length","Typeahead","_useComboboxContext","useComboboxContext","mode","completion","inputValue","disableDefaultStyles","_useComboboxContext$d","customClassNames","typeaheadClassName","_useComboboxContext$c","size","styles","getStylesObject","useTypeaheadStyles","typeaheadValue","hiddenText","substring","jsxs","Box","css","container","className","children","jsx","as","hidden"],"sources":["C:\\Users\\이세희\\Documents\\project_oyr\\node_modules\\@sajari\\react-components\\src\\Combobox\\components\\Typeahead\\index.tsx"],"sourcesContent":["import { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../../../Box';\nimport { useComboboxContext } from '../../context';\nimport { useTypeaheadStyles } from './styles';\n\nexport function trimPrefix(str: string, prefix: string) {\n  if (str === undefined || prefix === '') {\n    return '';\n  }\n  if (str.startsWith(prefix)) {\n    return str.slice(prefix.length);\n  }\n  return '';\n}\n\nconst Typeahead = () => {\n  const {\n    mode,\n    completion,\n    inputValue,\n    disableDefaultStyles = false,\n    customClassNames: { typeaheadClassName = '' },\n    size,\n  } = useComboboxContext();\n  const styles = getStylesObject(useTypeaheadStyles({ size }), disableDefaultStyles);\n  let typeaheadValue = '';\n  let hiddenText = '&#8203;';\n\n  if (mode === 'typeahead' && completion) {\n    typeaheadValue = trimPrefix(completion, inputValue);\n    hiddenText = completion.substring(0, completion.length - typeaheadValue.length);\n  }\n\n  return (\n    <Box css={styles.container} className={typeaheadClassName}>\n      <Box as=\"span\" css={styles.hidden}>\n        {hiddenText}\n      </Box>\n      {typeaheadValue}\n    </Box>\n  );\n};\n\nexport default Typeahead;\n"],"mappings":";;;;;;SAOgBA,WAAWC,GAAA,EAAaC,MAAA;EACtC,IAAID,GAAG,KAAKE,SAAR,IAAqBD,MAAM,KAAK,EAApC,EAAwC;IACtC,OAAO,EAAP;;EAEF,IAAID,GAAG,CAACG,UAAJ,CAAeF,MAAf,CAAJ,EAA4B;IAC1B,OAAOD,GAAG,CAACI,KAAJ,CAAUH,MAAM,CAACI,MAAjB,CAAP;;EAEF,OAAO,EAAP;AACD;AAED,IAAMC,SAAS,GAAG,SAAZA,SAAYA,CAAA;EAChB,IAAAC,mBAAA,GAOIC,kBAAkB,EAPtB;IACEC,IADF,GAAAF,mBAAA,CACEE,IADF;IAEEC,UAFF,GAAAH,mBAAA,CAEEG,UAFF;IAGEC,UAHF,GAAAJ,mBAAA,CAGEI,UAHF;gDAIEC,oBAJF;IAIEA,oBAJF,GAAAC,qBAAA,cAIyB,KAJzB,GAAAA,qBAAA;gDAKEC,gBALF,CAKsBC,kBALtB;IAKsBA,kBALtB,GAAAC,qBAAA,cAK2C,EAL3C,GAAAA,qBAAA;IAMEC,IANF,GAAAV,mBAAA,CAMEU,IANF;EAQA,IAAMC,MAAM,GAAGC,eAAe,CAACC,kBAAkB,CAAC;IAAEH,IAAI,EAAJA;GAAH,CAAnB,EAA+BL,oBAA/B,CAA9B;EACA,IAAIS,cAAc,GAAG,EAArB;EACA,IAAIC,UAAU,GAAG,SAAjB;EAEA,IAAIb,IAAI,KAAK,WAAT,IAAwBC,UAA5B,EAAwC;IACtCW,cAAc,GAAGtB,UAAU,CAACW,UAAD,EAAaC,UAAb,CAA3B;IACAW,UAAU,GAAGZ,UAAU,CAACa,SAAX,CAAqB,CAArB,EAAwBb,UAAU,CAACL,MAAX,GAAoBgB,cAAc,CAAChB,MAA3D,CAAb;;EAGF,OACEmB,IAAA,CAACC,GAAD;IAAKC,GAAG,EAAER,MAAM,CAACS,SAAjB;IAA4BC,SAAS,EAAEb,kBAAvC;IAAAc,QAAA,GACEC,GAAA,CAACL,GAAD;MAAKM,EAAE,EAAC,MAAR;MAAeL,GAAG,EAAER,MAAM,CAACc,MAA3B;MAAAH,QAAA,EACGP;MAFL,EAIGD,cAJH;IADF;AAQD,CA1BD"},"metadata":{},"sourceType":"module","externalDependencies":[]}