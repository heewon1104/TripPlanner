{"ast":null,"code":"import { createContext as createContext$1, useContext } from 'react';\nfunction createContext(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _options = options,\n    _options$strict = _options.strict,\n    strict = _options$strict === void 0 ? true : _options$strict,\n    _options$errorMessage = _options.errorMessage,\n    errorMessage = _options$errorMessage === void 0 ? 'useContext must be inside a Provider with a value' : _options$errorMessage,\n    name = _options.name;\n  var Context = createContext$1(undefined);\n  Context.displayName = name;\n  function useContext$1() {\n    var context = useContext(Context);\n    if (!context && strict) {\n      throw new Error(errorMessage);\n    }\n    return context;\n  }\n  return [Context.Provider, useContext$1, Context];\n}\nexport default createContext;","map":{"version":3,"names":["createContext","options","_options","strict","_options$strict","errorMessage","_options$errorMessage","name","Context","createContext$1","undefined","displayName","useContext$1","useContext","context","Error","Provider"],"sources":["C:\\Users\\이세희\\Documents\\project_oyr\\node_modules\\@sajari\\react-sdk-utils\\src\\context.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n\ninterface CreateContextOptions {\n  /** If `true`, React will throw if context is `null` or `undefined`.\n      In some cases, you might want to support nested context, so you can set it to `false` */\n  strict?: boolean;\n  /** Error message to throw if the context is `undefined` */\n  errorMessage?: string;\n  /** The display name of the context */\n  name?: string;\n}\n\n/**\n * Creates a named context, provider, and hook.\n *\n * @param options create context options\n */\nexport default function createContext<ContextType>(\n  options: CreateContextOptions = {},\n): CreateContextReturn<ContextType> {\n  const { strict = true, errorMessage = 'useContext must be inside a Provider with a value', name } = options;\n  const Context = React.createContext<ContextType | undefined>(undefined);\n\n  Context.displayName = name;\n\n  function useContext() {\n    const context = React.useContext(Context);\n    if (!context && strict) {\n      throw new Error(errorMessage);\n    }\n    return context;\n  }\n\n  return [Context.Provider, useContext, Context] as CreateContextReturn<ContextType>;\n}\n"],"mappings":";SAmBwBA,cACtBC,OAAA;MAAAA,OAAA;IAAAA,OAAA,GAAgC;;EAEhC,IAAAC,QAAA,GAAoGD,OAApG;+BAAQE,MAAR;IAAQA,MAAR,GAAAC,eAAA,cAAiB,IAAjB,GAAAA,eAAA;qCAAuBC,YAAvB;IAAuBA,YAAvB,GAAAC,qBAAA,cAAsC,mDAAtC,GAAAA,qBAAA;IAA2FC,IAA3F,GAAAL,QAAA,CAA2FK,IAA3F;EACA,IAAMC,OAAO,GAAGC,eAAA,CAA6CC,SAA7C,CAAhB;EAEAF,OAAO,CAACG,WAAR,GAAsBJ,IAAtB;EAEA,SAASK,YAATC,CAAA;IACE,IAAMC,OAAO,GAAGD,UAAA,CAAiBL,OAAjB,CAAhB;IACA,IAAI,CAACM,OAAD,IAAYX,MAAhB,EAAwB;MACtB,MAAM,IAAIY,KAAJ,CAAUV,YAAV,CAAN;;IAEF,OAAOS,OAAP;;EAGF,OAAO,CAACN,OAAO,CAACQ,QAAT,EAAmBJ,YAAnB,EAA+BJ,OAA/B,CAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}