{"ast":null,"code":"import React__default from 'react';\nimport { hideOthers } from 'aria-hidden';\nfunction AriaHidden(_ref) {\n  var refModal = _ref.refModal,\n    shouldHide = _ref.shouldHide;\n  React__default.useEffect(function () {\n    if (!refModal.current) return;\n    var undo = null;\n    if (shouldHide && refModal.current) {\n      undo = hideOthers(refModal.current);\n    }\n    return function () {\n      if (shouldHide) {\n        undo == null ? void 0 : undo();\n      }\n    };\n  }, [shouldHide, refModal]);\n  return null;\n}\nexport { AriaHidden };","map":{"version":3,"names":["AriaHidden","_ref","refModal","shouldHide","React__default","useEffect","current","undo","hideOthers"],"sources":["C:\\Users\\이세희\\Documents\\project_oyr\\node_modules\\@sajari\\react-components\\src\\Modal\\AriaHidden.tsx"],"sourcesContent":["import { hideOthers, Undo } from 'aria-hidden';\nimport React from 'react';\n\n/**\n * Modal component to polyfill `aria-modal`.\n *\n * It applies `aria-hidden` to elements behind the modal\n * to indicate that they're `inert`.\n *\n * @param refModal React ref of the node\n * @param shouldHide whether `aria-hidden` should be applied\n */\nexport function AriaHidden({ refModal, shouldHide }: { refModal: React.RefObject<HTMLElement>; shouldHide: boolean }) {\n  React.useEffect(() => {\n    if (!refModal.current) return;\n\n    let undo: Undo | null = null;\n\n    if (shouldHide && refModal.current) {\n      undo = hideOthers(refModal.current);\n    }\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      if (shouldHide) {\n        undo?.();\n      }\n    };\n  }, [shouldHide, refModal]);\n\n  return null;\n}\n"],"mappings":";;SAYgBA,WAAAC,IAAA;MAAaC,QAAA,GAAAD,IAAA,CAAAC,QAAA;IAAUC,UAAA,GAAAF,IAAA,CAAAE,UAAA;EACrCC,cAAK,CAACC,SAAN,CAAgB;IACd,IAAI,CAACH,QAAQ,CAACI,OAAd,EAAuB;IAEvB,IAAIC,IAAI,GAAgB,IAAxB;IAEA,IAAIJ,UAAU,IAAID,QAAQ,CAACI,OAA3B,EAAoC;MAClCC,IAAI,GAAGC,UAAU,CAACN,QAAQ,CAACI,OAAV,CAAjB;;IAIF,OAAO;MACL,IAAIH,UAAJ,EAAgB;QACdI,IAAI,QAAJ,YAAAA,IAAI;;KAFR;GAVF,EAeG,CAACJ,UAAD,EAAaD,QAAb,CAfH;EAiBA,OAAO,IAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}