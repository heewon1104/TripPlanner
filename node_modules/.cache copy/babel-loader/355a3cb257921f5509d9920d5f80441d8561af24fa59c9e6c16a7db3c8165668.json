{"ast":null,"code":"import { extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { getStylesObject, isSSR, __DEV__ } from '@sajari/react-sdk-utils';\nimport { useRef, useState, useEffect } from 'react';\nimport { jsx, jsxs } from '@emotion/core/jsx-runtime';\nimport Box from '../Box/index.esm.js';\nimport classnames from 'classnames';\nimport FocusLock from '../FocusLock/index.esm.js';\nimport { AriaHidden } from './AriaHidden.esm.js';\nimport ModalContextProvider from './context.esm.js';\nexport { default as ModalBody } from './ModalBody/index.esm.js';\nexport { default as ModalCloseButton } from './ModalCloseButton/index.esm.js';\nexport { default as ModalFooter } from './ModalFooter/index.esm.js';\nexport { default as ModalHeader } from './ModalHeader/index.esm.js';\nimport { useModalManager, modalManager } from './modalManager.esm.js';\nexport { default as ModalTitle } from './ModalTitle/index.esm.js';\nimport Portal from './Portal.esm.js';\nimport { useModalStyles } from './styles.esm.js';\nimport { useScrollLock } from './useScrollLock.esm.js';\nvar Modal = function Modal(props) {\n  var open = props.open,\n    _props$blockScroll = props.blockScroll,\n    blockScroll = _props$blockScroll === void 0 ? true : _props$blockScroll,\n    _props$closeOnEsc = props.closeOnEsc,\n    closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc,\n    _props$closeOnOverlay = props.closeOnOverlayClick,\n    closeOnOverlayClick = _props$closeOnOverlay === void 0 ? true : _props$closeOnOverlay,\n    container = props.container,\n    _props$role = props.role,\n    role = _props$role === void 0 ? 'dialog' : _props$role,\n    ariaDescribedby = props.ariaDescribedby,\n    ariaLabelledby = props.ariaLabelledby,\n    modalId = props.modalId,\n    onClose = props.onClose,\n    onEscKeyDown = props.onEscKeyDown,\n    _props$trapFocus = props.trapFocus,\n    trapFocus = _props$trapFocus === void 0 ? true : _props$trapFocus,\n    _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n    initialFocusRef = props.initialFocusRef,\n    finalFocusRef = props.finalFocusRef,\n    _props$returnFocusOnC = props.returnFocusOnClose,\n    returnFocusOnClose = _props$returnFocusOnC === void 0 ? true : _props$returnFocusOnC,\n    onOverlayClick = props.onOverlayClick,\n    onAnimationEnd = props.onAnimationEnd,\n    children = props.children,\n    _props$disableDefault = props.disableDefaultStyles,\n    disableDefaultStyles = _props$disableDefault === void 0 ? false : _props$disableDefault,\n    stylesProp = props.styles,\n    modalClassName = props.modalClassName,\n    modalContainerClassName = props.modalContainerClassName,\n    overlayClassName = props.overlayClassName,\n    overlayOpenClassName = props.overlayOpenClassName,\n    modalOpenClassName = props.modalOpenClassName,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'md' : _props$size,\n    rootClassName = props.rootClassName,\n    _props$useInert = props.useInert,\n    useInert = _props$useInert === void 0 ? true : _props$useInert;\n  var refModal = useRef(null);\n  var refShouldClose = useRef(null);\n  var refContainer = useRef(null);\n  var styles = getStylesObject(useModalStyles(_extends({}, props, {\n    size: size\n  })), disableDefaultStyles);\n  if (refContainer.current === null && !isSSR()) {\n    refContainer.current = document.createElement('div');\n  }\n  var _useState = useState(false),\n    showPortal = _useState[0],\n    setShowPortal = _useState[1];\n  useModalManager(refModal, open);\n  useScrollLock(refModal, open, showPortal, blockScroll);\n  var handleKeydown = function handleKeydown(event) {\n    if (event.keyCode !== 27 || !modalManager.isTopModal(refModal)) {\n      return;\n    }\n    onEscKeyDown == null ? void 0 : onEscKeyDown(event);\n    if (closeOnEsc) {\n      onClose();\n    }\n  };\n  var handleOpen = function handleOpen() {\n    if (refContainer.current && !container && !document.body.contains(refContainer.current)) {\n      document.body.appendChild(refContainer.current);\n    }\n    document.addEventListener('keydown', handleKeydown);\n  };\n  var handleClose = function handleClose() {\n    if (refContainer.current && !container && document.body.contains(refContainer.current)) {\n      document.body.removeChild(refContainer.current);\n    }\n    document.removeEventListener('keydown', handleKeydown);\n  };\n  useEffect(function () {\n    return function () {\n      if (showPortal) {\n        handleClose();\n      }\n    };\n  }, [showPortal]);\n  useEffect(function () {\n    if (open && !showPortal) {\n      setShowPortal(true);\n      handleOpen();\n    }\n  }, [open]);\n  var handleClickOverlay = function handleClickOverlay(event) {\n    if (refShouldClose.current === null) {\n      refShouldClose.current = true;\n    }\n    if (!refShouldClose.current) {\n      refShouldClose.current = null;\n      return;\n    }\n    onOverlayClick == null ? void 0 : onOverlayClick(event);\n    if (closeOnOverlayClick) {\n      onClose();\n    }\n    refShouldClose.current = null;\n  };\n  var handleModalEvent = function handleModalEvent() {\n    refShouldClose.current = false;\n  };\n  var handleAnimationEnd = function handleAnimationEnd() {\n    if (!open) {\n      setShowPortal(false);\n    }\n    onAnimationEnd == null ? void 0 : onAnimationEnd();\n  };\n  var containerModal = container || refContainer.current;\n  var context = {\n    titleId: ariaLabelledby,\n    bodyId: ariaDescribedby,\n    disableDefaultStyles: disableDefaultStyles,\n    size: size,\n    onClose: onClose,\n    open: open\n  };\n  return showPortal && containerModal ? jsx(Portal, {\n    target: containerModal,\n    children: jsx(ModalContextProvider, {\n      value: context,\n      children: jsxs(FocusLock, {\n        autoFocus: autoFocus,\n        disabled: !trapFocus,\n        contentRef: refModal,\n        initialFocusRef: initialFocusRef,\n        finalFocusRef: finalFocusRef,\n        restoreFocus: returnFocusOnClose,\n        children: [jsxs(Box, {\n          className: rootClassName,\n          css: stylesProp,\n          children: [jsx(Box, {\n            className: classnames(overlayClassName, open ? overlayOpenClassName : ''),\n            \"aria-hidden\": true,\n            css: styles.overlay,\n            children: jsx(Box, {\n              css: styles.overlayInner\n            })\n          }), jsx(Box, {\n            ref: refModal,\n            className: modalContainerClassName,\n            css: styles.container,\n            \"data-testid\": \"modal-container\",\n            onAnimationEnd: handleAnimationEnd,\n            onClick: handleClickOverlay,\n            children: jsx(Box, {\n              \"data-testid\": \"modal\",\n              className: classnames(modalClassName, open ? modalOpenClassName : ''),\n              onMouseDown: handleModalEvent,\n              onMouseUp: handleModalEvent,\n              onClick: handleModalEvent,\n              id: modalId,\n              role: role,\n              \"aria-modal\": \"true\",\n              \"aria-labelledby\": ariaLabelledby,\n              \"aria-describedby\": ariaDescribedby,\n              css: styles.content,\n              children: children\n            })\n          })]\n        }), jsx(AriaHidden, {\n          refModal: refModal,\n          shouldHide: open && useInert\n        })]\n      })\n    })\n  }) : null;\n};\nif (__DEV__) {\n  Modal.displayName = 'Modal';\n}\nexport default Modal;","map":{"version":3,"names":["Modal","props","open","blockScroll","_props$blockScroll","closeOnEsc","_props$closeOnEsc","closeOnOverlayClick","_props$closeOnOverlay","container","role","_props$role","ariaDescribedby","ariaLabelledby","modalId","onClose","onEscKeyDown","trapFocus","_props$trapFocus","autoFocus","_props$autoFocus","initialFocusRef","finalFocusRef","returnFocusOnClose","_props$returnFocusOnC","onOverlayClick","onAnimationEnd","children","disableDefaultStyles","_props$disableDefault","stylesProp","styles","modalClassName","modalContainerClassName","overlayClassName","overlayOpenClassName","modalOpenClassName","size","_props$size","rootClassName","useInert","_props$useInert","refModal","useRef","refShouldClose","refContainer","getStylesObject","useModalStyles","_extends","current","isSSR","document","createElement","_useState","useState","showPortal","setShowPortal","useModalManager","useScrollLock","handleKeydown","event","keyCode","modalManager","isTopModal","handleOpen","body","contains","appendChild","addEventListener","handleClose","removeChild","removeEventListener","useEffect","handleClickOverlay","handleModalEvent","handleAnimationEnd","containerModal","context","titleId","bodyId","jsx","Portal","target","ModalContextProvider","value","jsxs","FocusLock","disabled","contentRef","restoreFocus","Box","className","css","classnames","overlay","overlayInner","ref","onClick","onMouseDown","onMouseUp","id","content","AriaHidden","shouldHide","__DEV__","displayName"],"sources":["C:\\Users\\이세희\\Documents\\project_oyr\\node_modules\\@sajari\\react-components\\src\\Modal\\index.tsx"],"sourcesContent":["import { __DEV__, getStylesObject, isSSR } from '@sajari/react-sdk-utils';\nimport classnames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport Box from '../Box';\nimport FocusLock from '../FocusLock';\nimport { AriaHidden } from './AriaHidden';\nimport ModalContextProvider from './context';\nimport ModalBody, { ModalBodyProps } from './ModalBody';\nimport ModalCloseButton, { ModalCloseButtonProps } from './ModalCloseButton';\nimport ModalFooter, { ModalFooterProps } from './ModalFooter';\nimport ModalHeader, { ModalHeaderProps } from './ModalHeader';\nimport { modalManager, useModalManager } from './modalManager';\nimport ModalTitle, { ModalTitleProps } from './ModalTitle';\nimport Portal from './Portal';\nimport { useModalStyles } from './styles';\nimport { ModalProps } from './types';\nimport { useScrollLock } from './useScrollLock';\n\nconst Modal = (props: ModalProps) => {\n  const {\n    open,\n    blockScroll = true,\n    closeOnEsc = true,\n    closeOnOverlayClick = true,\n    container,\n    role = 'dialog',\n    ariaDescribedby,\n    ariaLabelledby,\n    modalId,\n    onClose,\n    onEscKeyDown,\n    trapFocus = true,\n    autoFocus = true,\n    initialFocusRef,\n    finalFocusRef,\n    returnFocusOnClose = true,\n    onOverlayClick,\n    onAnimationEnd,\n    children,\n    disableDefaultStyles = false,\n    styles: stylesProp,\n    modalClassName,\n    modalContainerClassName,\n    overlayClassName,\n    overlayOpenClassName,\n    modalOpenClassName,\n    size = 'md',\n    rootClassName,\n    useInert = true,\n  } = props;\n  const refModal = useRef<HTMLDivElement>(null);\n  const refShouldClose = useRef<boolean | null>(null);\n  const refContainer = useRef<HTMLDivElement | null>(null);\n  const styles = getStylesObject(useModalStyles({ ...props, size }), disableDefaultStyles);\n\n  // Lazily create the ref instance\n  // https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n  if (refContainer.current === null && !isSSR()) {\n    refContainer.current = document.createElement('div');\n  }\n\n  // The value should be false for srr, that way when the component is hydrated client side,\n  // it will match the server rendered content\n  const [showPortal, setShowPortal] = useState(false);\n\n  // Hook used to manage multiple modals opened at the same time\n  useModalManager(refModal, open);\n\n  // Hook used to manage the scroll\n  useScrollLock(refModal, open, showPortal, blockScroll);\n\n  const handleKeydown = (event: KeyboardEvent) => {\n    // Only the last modal need to be escaped when pressing the esc key\n    if (event.keyCode !== 27 || !modalManager.isTopModal(refModal)) {\n      return;\n    }\n\n    onEscKeyDown?.(event);\n\n    if (closeOnEsc) {\n      onClose();\n    }\n  };\n\n  const handleOpen = () => {\n    if (refContainer.current && !container && !document.body.contains(refContainer.current)) {\n      document.body.appendChild(refContainer.current);\n    }\n\n    document.addEventListener('keydown', handleKeydown);\n  };\n\n  const handleClose = () => {\n    if (refContainer.current && !container && document.body.contains(refContainer.current)) {\n      document.body.removeChild(refContainer.current);\n    }\n    document.removeEventListener('keydown', handleKeydown);\n  };\n\n  useEffect(() => {\n    return () => {\n      if (showPortal) {\n        // When the modal is closed or removed directly, cleanup the listeners\n        handleClose();\n      }\n    };\n  }, [showPortal]);\n\n  useEffect(() => {\n    // If the open prop is changing, we need to open the modal\n    // This is also called on the first render if the open prop is true when the modal is created\n    if (open && !showPortal) {\n      setShowPortal(true);\n      handleOpen();\n    }\n  }, [open]);\n\n  const handleClickOverlay = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (refShouldClose.current === null) {\n      refShouldClose.current = true;\n    }\n\n    if (!refShouldClose.current) {\n      refShouldClose.current = null;\n      return;\n    }\n\n    onOverlayClick?.(event);\n\n    if (closeOnOverlayClick) {\n      onClose();\n    }\n\n    refShouldClose.current = null;\n  };\n\n  const handleModalEvent = () => {\n    refShouldClose.current = false;\n  };\n\n  const handleAnimationEnd = () => {\n    if (!open) {\n      setShowPortal(false);\n    }\n    onAnimationEnd?.();\n  };\n\n  const containerModal = container || refContainer.current;\n\n  const context = {\n    titleId: ariaLabelledby,\n    bodyId: ariaDescribedby,\n    disableDefaultStyles,\n    size,\n    onClose,\n    open,\n  };\n\n  return showPortal && containerModal ? (\n    <Portal target={containerModal}>\n      <ModalContextProvider value={context}>\n        <FocusLock\n          autoFocus={autoFocus}\n          disabled={!trapFocus}\n          contentRef={refModal}\n          initialFocusRef={initialFocusRef}\n          finalFocusRef={finalFocusRef}\n          restoreFocus={returnFocusOnClose}\n        >\n          <Box className={rootClassName} css={stylesProp}>\n            <Box\n              className={classnames(overlayClassName, open ? overlayOpenClassName : '')}\n              aria-hidden\n              css={styles.overlay}\n            >\n              <Box css={styles.overlayInner} />\n            </Box>\n            <Box\n              ref={refModal}\n              className={modalContainerClassName}\n              css={styles.container}\n              data-testid=\"modal-container\"\n              onAnimationEnd={handleAnimationEnd}\n              onClick={handleClickOverlay}\n            >\n              <Box\n                data-testid=\"modal\"\n                className={classnames(modalClassName, open ? modalOpenClassName : '')}\n                onMouseDown={handleModalEvent}\n                onMouseUp={handleModalEvent}\n                onClick={handleModalEvent}\n                id={modalId}\n                role={role}\n                aria-modal=\"true\"\n                aria-labelledby={ariaLabelledby}\n                aria-describedby={ariaDescribedby}\n                css={styles.content}\n              >\n                {children}\n              </Box>\n            </Box>\n          </Box>\n          <AriaHidden refModal={refModal} shouldHide={open && useInert} />\n        </FocusLock>\n      </ModalContextProvider>\n    </Portal>\n  ) : null;\n};\n\nif (__DEV__) {\n  Modal.displayName = 'Modal';\n}\n\nexport default Modal;\nexport { ModalBody, ModalCloseButton, ModalFooter, ModalHeader, ModalTitle };\nexport type { ModalBodyProps, ModalCloseButtonProps, ModalFooterProps, ModalHeaderProps, ModalProps, ModalTitleProps };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}