{"ast":null,"code":"import { mapStyles, inferStylesObjectKeys } from '@sajari/react-sdk-utils';\nfunction useDropdownItemStyles(props) {\n  var selected = props.selected;\n  var styles = inferStylesObjectKeys({\n    item: [{\n      \"display\": \"flex\",\n      \"alignItems\": \"center\",\n      \"width\": \"100%\",\n      \"paddingLeft\": \"0.5em\",\n      \"paddingRight\": \"0.5em\",\n      \"paddingTop\": \"0.25em\",\n      \"paddingBottom\": \"0.25em\",\n      \"fontSize\": \"0.875em\",\n      \"lineHeight\": \"1.25em\",\n      \"textAlign\": \"left\",\n      \"transitionProperty\": \"all\",\n      \"transitionTimingFunction\": \"cubic-bezier(0.4, 0, 0.2, 1)\",\n      \"transitionDuration\": \"75ms\",\n      \"borderRadius\": \"0.25em\",\n      \"cursor\": \"pointer\"\n    }],\n    imageContainer: [{\n      \"flex\": \"none\",\n      \"width\": \"3em\",\n      \"height\": \"3em\",\n      \"marginRight\": \"1.5em\"\n    }],\n    textContainer: [{\n      \"minWidth\": \"0px\",\n      \"> :not([hidden]) ~ :not([hidden])\": {\n        \"--tw-space-y-reverse\": 0,\n        \"marginTop\": \"calc(0.125em * calc(1 - var(--tw-space-y-reverse)))\",\n        \"marginBottom\": \"calc(0.125em * var(--tw-space-y-reverse))\"\n      }\n    }]\n  });\n  if (selected) {\n    styles.item.push({\n      \"--tw-bg-opacity\": \"1\",\n      \"backgroundColor\": \"rgba(229, 231, 235, var(--tw-bg-opacity))\"\n    });\n  }\n  return mapStyles(styles);\n}\nexport { useDropdownItemStyles };","map":{"version":3,"names":["useDropdownItemStyles","props","selected","styles","inferStylesObjectKeys","item","imageContainer","textContainer","push","mapStyles"],"sources":["C:\\Users\\이세희\\Documents\\project_oyr\\node_modules\\@sajari\\react-components\\src\\Combobox\\components\\DropdownResult\\styles.ts"],"sourcesContent":["import { inferStylesObjectKeys, mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { DropdownResultProps } from './types';\n\nexport function useDropdownItemStyles(props: DropdownResultProps) {\n  const { selected } = props;\n  const styles = inferStylesObjectKeys({\n    item: [\n      tw`flex items-center w-full px-2 py-1 text-sm leading-5 text-left transition-all duration-75 rounded cursor-pointer`,\n    ],\n    imageContainer: [tw`flex-none w-12 h-12 mr-6`],\n    textContainer: [tw`min-w-0 space-y-0.5`],\n  });\n\n  if (selected) {\n    styles.item.push(tw`bg-gray-200`);\n  }\n\n  return mapStyles(styles);\n}\n"],"mappings":";SAKgBA,sBAAsBC,KAAA;EACpC,IAAQC,QAAR,GAAqBD,KAArB,CAAQC,QAAR;EACA,IAAMC,MAAM,GAAGC,qBAAqB,CAAC;IACnCC,IAAI,EAAE,CACF;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;KADE,CAD6B;IAInCC,cAAc,EAAE,CAAG;MAAA;MAAA;MAAA;MAAA;KAAH,CAJmB;IAKnCC,aAAa,EAAE,CAAG;MAAA;MAAA;QAAA;QAAA;QAAA;;KAAH;GALmB,CAApC;EAQA,IAAIL,QAAJ,EAAc;IACZC,MAAM,CAACE,IAAP,CAAYG,IAAZ,CAAmB;MAAA;MAAA;KAAnB;;EAGF,OAAOC,SAAS,CAACN,MAAD,CAAhB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}