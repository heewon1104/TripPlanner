{"ast":null,"code":"import { extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport { mapStyles } from '@sajari/react-sdk-utils';\nimport '../../../hooks/useBorderRadius.esm.js';\nimport '../../../hooks/useDropdownItemStyles.esm.js';\nimport '../../../hooks/useDropdownStyles.esm.js';\nimport '../../../hooks/useFirstRender.esm.js';\nimport '../../../hooks/useFontSize.esm.js';\nimport useInputStyles from '../../../hooks/useInputStyles.esm.js';\nimport '../../../hooks/useJustifyContent.esm.js';\nimport '../../../hooks/useSpacing.esm.js';\nimport '../../../hooks/useVoiceInput.esm.js';\nimport 'use-resize-observer/polyfilled';\nfunction useRangeInputStyles(props) {\n  var max = props.max,\n    step = props.step;\n  var _useInputStyles = useInputStyles(_extends({\n      type: 'text',\n      size: 'sm'\n    }, props)),\n    inputStyles = _useInputStyles.styles;\n  var charLength = (max + step).toString().length;\n  var styles = {\n    container: [{\n      \"position\": \"relative\"\n    }],\n    input: [inputStyles, \"width: calc(\" + charLength * 9 + \"px + 2.5rem)\"]\n  };\n  return {\n    styles: mapStyles(styles)\n  };\n}\nexport default useRangeInputStyles;","map":{"version":3,"names":["useRangeInputStyles","props","max","step","_useInputStyles","useInputStyles","_extends","type","size","inputStyles","styles","charLength","toString","length","container","input","mapStyles"],"sources":["C:\\Users\\이세희\\Documents\\project_oyr\\node_modules\\@sajari\\react-components\\src\\RangeInput\\components\\Input\\styles.ts"],"sourcesContent":["import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { UseInputStyleProps, useInputStyles } from '../../../hooks';\nimport { RangeInputInputProps } from './types';\n\ntype UseRangeInputStylesParams<T> = RangeInputInputProps<T>;\n\nexport default function useRangeInputStyles<T>(props: UseRangeInputStylesParams<T>) {\n  const { max, step } = props;\n  const { styles: inputStyles } = useInputStyles({\n    type: 'text',\n    size: 'sm',\n    ...props,\n  } as UseInputStyleProps);\n\n  const charLength = (max + step).toString().length;\n\n  const styles = {\n    container: [tw`relative`],\n    // TODO: Replace the magic numbers with calculated ones\n    input: [inputStyles, `width: calc(${charLength * 9}px + 2.5rem)`],\n  };\n\n  return { styles: mapStyles(styles) };\n}\n"],"mappings":";;;;;;;;;;;;SAQwBA,oBAAuBC,KAAA;EAC7C,IAAQC,GAAR,GAAsBD,KAAtB,CAAQC,GAAR;IAAaC,IAAb,GAAsBF,KAAtB,CAAaE,IAAb;EACA,IAAAC,eAAA,GAAgCC,cAAc,CAAAC,QAAA;MAC5CC,IAAI,EAAE,MADsC;MAE5CC,IAAI,EAAE;OACHP,KAHyC,EAA9C;IAAgBQ,WAAhB,GAAAL,eAAA,CAAQM,MAAR;EAMA,IAAMC,UAAU,GAAG,CAACT,GAAG,GAAGC,IAAP,EAAaS,QAAb,GAAwBC,MAA3C;EAEA,IAAMH,MAAM,GAAG;IACbI,SAAS,EAAE,CAAG;MAAA;KAAH,CADE;IAGbC,KAAK,EAAE,CAACN,WAAD,mBAA6BE,UAAU,GAAG,CAA1C;GAHT;EAMA,OAAO;IAAED,MAAM,EAAEM,SAAS,CAACN,MAAD;GAA1B;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}