{"ast":null,"code":"import { isSSR } from '@sajari/react-sdk-utils';\nimport { useState, useRef, useEffect, useCallback } from 'react';\nfunction useVoiceInput(onResult) {\n  var _useState = useState(false),\n    supported = _useState[0],\n    setSupported = _useState[1];\n  var _useState2 = useState(false),\n    active = _useState2[0],\n    setActive = _useState2[1];\n  var _useState3 = useState(''),\n    result = _useState3[0],\n    setResult = _useState3[1];\n  var recognitionRef = useRef();\n  useEffect(function () {\n    if (isSSR()) {\n      return;\n    }\n    if (window.hasOwnProperty('SpeechRecognition')) {\n      setSupported('native');\n    } else if (window.hasOwnProperty('webkitSpeechRecognition')) {\n      setSupported('webkit');\n    }\n  }, []);\n  useEffect(function () {\n    if (supported) {\n      if (supported === 'native') {\n        recognitionRef.current = new window.SpeechRecognition();\n      } else {\n        recognitionRef.current = new window.webkitSpeechRecognition();\n      }\n    }\n  }, [supported]);\n  var start = useCallback(function () {\n    if (!supported || !recognitionRef.current) {\n      return;\n    }\n    var recognition = recognitionRef.current;\n    if (active) {\n      setActive(false);\n      recognition.stop();\n      return;\n    }\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.start();\n    recognition.onresult = function (event) {\n      setActive(false);\n      recognition.stop();\n      var r = event.results[0][0].transcript;\n      setResult(r);\n      onResult == null ? void 0 : onResult(r);\n    };\n    recognition.onerror = function () {\n      setActive(false);\n      recognition.stop();\n    };\n    setActive(true);\n  }, [active, supported, onResult]);\n  return {\n    supported: supported !== false,\n    result: result,\n    active: active,\n    start: start\n  };\n}\nexport default useVoiceInput;","map":{"version":3,"names":["useVoiceInput","onResult","_useState","useState","supported","setSupported","_useState2","active","setActive","_useState3","result","setResult","recognitionRef","useRef","useEffect","isSSR","window","hasOwnProperty","current","SpeechRecognition","webkitSpeechRecognition","start","useCallback","recognition","stop","continuous","interimResults","onresult","event","r","results","transcript","onerror"],"sources":["C:\\Users\\이세희\\Documents\\project_oyr\\node_modules\\@sajari\\react-components\\src\\hooks\\useVoiceInput.ts"],"sourcesContent":["/* eslint-disable new-cap, no-prototype-builtins */\nimport { isSSR } from '@sajari/react-sdk-utils';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { SpeechRecognition } from '../types/speech-recognition';\n\ntype SpeechRecognitionSupport = 'native' | 'webkit' | false;\n\nexport default function useVoiceInput(onResult?: (r: string) => void) {\n  const [supported, setSupported] = useState<SpeechRecognitionSupport>(false);\n  const [active, setActive] = useState(false);\n  const [result, setResult] = useState('');\n  const recognitionRef = useRef<SpeechRecognition>();\n\n  useEffect(() => {\n    if (isSSR()) {\n      return;\n    }\n\n    if (window.hasOwnProperty('SpeechRecognition')) {\n      setSupported('native');\n    } else if (window.hasOwnProperty('webkitSpeechRecognition')) {\n      setSupported('webkit');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (supported) {\n      if (supported === 'native') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        recognitionRef.current = new (window as any).SpeechRecognition() as SpeechRecognition;\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        recognitionRef.current = new (window as any).webkitSpeechRecognition() as SpeechRecognition;\n      }\n    }\n  }, [supported]);\n\n  const start = useCallback(() => {\n    if (!supported || !recognitionRef.current) {\n      return;\n    }\n\n    const recognition = recognitionRef.current;\n\n    if (active) {\n      setActive(false);\n      recognition.stop();\n      return;\n    }\n\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.start();\n\n    recognition.onresult = (event) => {\n      setActive(false);\n      recognition.stop();\n      const r = event.results[0][0].transcript;\n      setResult(r);\n      onResult?.(r);\n    };\n\n    recognition.onerror = () => {\n      setActive(false);\n      recognition.stop();\n    };\n\n    setActive(true);\n  }, [active, supported, onResult]);\n\n  return {\n    supported: supported !== false,\n    result,\n    active,\n    start,\n  };\n}\n"],"mappings":";;SAQwBA,cAAcC,QAAA;EACpC,IAAAC,SAAA,GAAkCC,QAAQ,CAA2B,KAA3B,CAA1C;IAAOC,SAAP,GAAAF,SAAA;IAAkBG,YAAlB,GAAAH,SAAA;EACA,IAAAI,UAAA,GAA4BH,QAAQ,CAAC,KAAD,CAApC;IAAOI,MAAP,GAAAD,UAAA;IAAeE,SAAf,GAAAF,UAAA;EACA,IAAAG,UAAA,GAA4BN,QAAQ,CAAC,EAAD,CAApC;IAAOO,MAAP,GAAAD,UAAA;IAAeE,SAAf,GAAAF,UAAA;EACA,IAAMG,cAAc,GAAGC,MAAM,EAA7B;EAEAC,SAAS,CAAC;IACR,IAAIC,KAAK,EAAT,EAAa;MACX;;IAGF,IAAIC,MAAM,CAACC,cAAP,CAAsB,mBAAtB,CAAJ,EAAgD;MAC9CZ,YAAY,CAAC,QAAD,CAAZ;KADF,MAEO,IAAIW,MAAM,CAACC,cAAP,CAAsB,yBAAtB,CAAJ,EAAsD;MAC3DZ,YAAY,CAAC,QAAD,CAAZ;;GARK,EAUN,EAVM,CAAT;EAYAS,SAAS,CAAC;IACR,IAAIV,SAAJ,EAAe;MACb,IAAIA,SAAS,KAAK,QAAlB,EAA4B;QAE1BQ,cAAc,CAACM,OAAf,GAAyB,IAAKF,MAAc,CAACG,iBAApB,EAAzB;OAFF,MAGO;QAELP,cAAc,CAACM,OAAf,GAAyB,IAAKF,MAAc,CAACI,uBAApB,EAAzB;;;GAPG,EAUN,CAAChB,SAAD,CAVM,CAAT;EAYA,IAAMiB,KAAK,GAAGC,WAAW,CAAC;IACxB,IAAI,CAAClB,SAAD,IAAc,CAACQ,cAAc,CAACM,OAAlC,EAA2C;MACzC;;IAGF,IAAMK,WAAW,GAAGX,cAAc,CAACM,OAAnC;IAEA,IAAIX,MAAJ,EAAY;MACVC,SAAS,CAAC,KAAD,CAAT;MACAe,WAAW,CAACC,IAAZ;MACA;;IAGFD,WAAW,CAACE,UAAZ,GAAyB,KAAzB;IACAF,WAAW,CAACG,cAAZ,GAA6B,KAA7B;IACAH,WAAW,CAACF,KAAZ;IAEAE,WAAW,CAACI,QAAZ,GAAuB,UAACC,KAAD;MACrBpB,SAAS,CAAC,KAAD,CAAT;MACAe,WAAW,CAACC,IAAZ;MACA,IAAMK,CAAC,GAAGD,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,UAA9B;MACApB,SAAS,CAACkB,CAAD,CAAT;MACA5B,QAAQ,QAAR,YAAAA,QAAQ,CAAG4B,CAAH,CAAR;KALF;IAQAN,WAAW,CAACS,OAAZ,GAAsB;MACpBxB,SAAS,CAAC,KAAD,CAAT;MACAe,WAAW,CAACC,IAAZ;KAFF;IAKAhB,SAAS,CAAC,IAAD,CAAT;GA9BuB,EA+BtB,CAACD,MAAD,EAASH,SAAT,EAAoBH,QAApB,CA/BsB,CAAzB;EAiCA,OAAO;IACLG,SAAS,EAAEA,SAAS,KAAK,KADpB;IAELM,MAAM,EAANA,MAFK;IAGLH,MAAM,EAANA,MAHK;IAILc,KAAK,EAALA;GAJF;AAMD"},"metadata":{},"sourceType":"module","externalDependencies":[]}