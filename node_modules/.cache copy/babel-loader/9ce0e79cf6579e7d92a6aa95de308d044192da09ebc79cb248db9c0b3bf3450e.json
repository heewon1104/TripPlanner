{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nvar useScrollLock = function useScrollLock(refModal, open, showPortal, blockScroll) {\n  var oldRef = useRef(null);\n  useEffect(function () {\n    if (open && refModal.current && blockScroll) {\n      oldRef.current = refModal.current;\n      disableBodyScroll(refModal.current);\n    }\n    return function () {\n      if (oldRef.current) {\n        enableBodyScroll(oldRef.current);\n        oldRef.current = null;\n      }\n    };\n  }, [open, showPortal, refModal]);\n};\nexport { useScrollLock };","map":{"version":3,"names":["useScrollLock","refModal","open","showPortal","blockScroll","oldRef","useRef","useEffect","current","disableBodyScroll","enableBodyScroll"],"sources":["C:\\Users\\이세희\\Documents\\project_oyr\\node_modules\\@sajari\\react-components\\src\\Modal\\useScrollLock.ts"],"sourcesContent":["import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { useEffect, useRef } from 'react';\n\nexport const useScrollLock = (\n  refModal: React.RefObject<Element>,\n  open: boolean,\n  showPortal: boolean,\n  blockScroll: boolean,\n) => {\n  const oldRef = useRef<Element | null>(null);\n\n  useEffect(() => {\n    if (open && refModal.current && blockScroll) {\n      oldRef.current = refModal.current;\n      disableBodyScroll(refModal.current);\n    }\n    return () => {\n      if (oldRef.current) {\n        enableBodyScroll(oldRef.current);\n        oldRef.current = null;\n      }\n    };\n  }, [open, showPortal, refModal]);\n};\n"],"mappings":";;IAGaA,aAAa,GAAG,SAAhBA,aAAgBA,CAC3BC,QAD2B,EAE3BC,IAF2B,EAG3BC,UAH2B,EAI3BC,WAJ2B;EAM3B,IAAMC,MAAM,GAAGC,MAAM,CAAiB,IAAjB,CAArB;EAEAC,SAAS,CAAC;IACR,IAAIL,IAAI,IAAID,QAAQ,CAACO,OAAjB,IAA4BJ,WAAhC,EAA6C;MAC3CC,MAAM,CAACG,OAAP,GAAiBP,QAAQ,CAACO,OAA1B;MACAC,iBAAiB,CAACR,QAAQ,CAACO,OAAV,CAAjB;;IAEF,OAAO;MACL,IAAIH,MAAM,CAACG,OAAX,EAAoB;QAClBE,gBAAgB,CAACL,MAAM,CAACG,OAAR,CAAhB;QACAH,MAAM,CAACG,OAAP,GAAiB,IAAjB;;KAHJ;GALO,EAWN,CAACN,IAAD,EAAOC,UAAP,EAAmBF,QAAnB,CAXM,CAAT;AAYD"},"metadata":{},"sourceType":"module","externalDependencies":[]}