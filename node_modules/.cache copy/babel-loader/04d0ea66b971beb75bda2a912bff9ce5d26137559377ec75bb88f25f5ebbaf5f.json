{"ast":null,"code":"import { mapStyles } from '@sajari/react-sdk-utils';\nimport '../../../hooks/useBorderRadius.esm.js';\nimport { useDropdownItemStyles } from '../../../hooks/useDropdownItemStyles.esm.js';\nimport '../../../hooks/useDropdownStyles.esm.js';\nimport '../../../hooks/useFirstRender.esm.js';\nimport useFontSize from '../../../hooks/useFontSize.esm.js';\nimport '../../../hooks/useInputStyles.esm.js';\nimport '../../../hooks/useJustifyContent.esm.js';\nimport '../../../hooks/useSpacing.esm.js';\nimport '../../../hooks/useVoiceInput.esm.js';\nimport 'use-resize-observer/polyfilled';\nfunction useOptionStyles(params) {\n  var size = params.size,\n    highlighted = params.highlighted,\n    selected = params.selected,\n    disabled = params.disabled;\n  var fontSizeStyles = useFontSize({\n    size: size\n  });\n  var _useCoreDropdownItemS = useDropdownItemStyles({\n      highlighted: highlighted\n    }),\n    root = _useCoreDropdownItemS.root,\n    label = _useCoreDropdownItemS.label;\n  var styles = {\n    option: [root, disabled ? {\n      \"--tw-text-opacity\": \"1\",\n      \"color\": \"rgba(156, 163, 175, var(--tw-text-opacity))\",\n      \"cursor\": \"not-allowed\"\n    } : null, {\n      \":last-child\": {\n        \"marginBottom\": \"0.25em\"\n      }\n    }],\n    children: [{\n      \"flex\": \"1 1 0%\"\n    }, selected ? {\n      \"paddingLeft\": \"0.25em\"\n    } : {\n      \"paddingLeft\": \"1em\"\n    }, fontSizeStyles],\n    label: [label]\n  };\n  return {\n    styles: mapStyles(styles)\n  };\n}\nexport { useOptionStyles };","map":{"version":3,"names":["useOptionStyles","params","size","highlighted","selected","disabled","fontSizeStyles","useFontSize","_useCoreDropdownItemS","useDropdownItemStyles","root","label","styles","option","children","mapStyles"],"sources":["C:\\Users\\이세희\\Documents\\project_oyr\\node_modules\\@sajari\\react-components\\src\\Select\\components\\Option\\styles.ts"],"sourcesContent":["import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useDropdownItemStyles as useCoreDropdownItemStyles, useFontSize } from '../../../hooks';\nimport { SelectProps } from '../../types';\nimport { OptionProps } from './types';\n\ninterface UseOptionStylesParams extends Omit<OptionProps, 'size'> {\n  highlighted: boolean;\n  selected: boolean;\n  size: SelectProps['size'];\n}\n\nexport function useOptionStyles(params: UseOptionStylesParams) {\n  const { size, highlighted, selected, disabled } = params;\n  const fontSizeStyles = useFontSize({ size });\n  const { root, label } = useCoreDropdownItemStyles({ highlighted });\n  const styles = {\n    option: [root, disabled ? tw`text-gray-400 cursor-not-allowed` : null, tw`last:(mb-1)`],\n    children: [tw`flex-1`, selected ? tw`pl-1` : tw`pl-4`, fontSizeStyles],\n    label: [label],\n  };\n\n  return { styles: mapStyles(styles) };\n}\n"],"mappings":";;;;;;;;;;;SAagBA,gBAAgBC,MAAA;EAC9B,IAAQC,IAAR,GAAkDD,MAAlD,CAAQC,IAAR;IAAcC,WAAd,GAAkDF,MAAlD,CAAcE,WAAd;IAA2BC,QAA3B,GAAkDH,MAAlD,CAA2BG,QAA3B;IAAqCC,QAArC,GAAkDJ,MAAlD,CAAqCI,QAArC;EACA,IAAMC,cAAc,GAAGC,WAAW,CAAC;IAAEL,IAAI,EAAJA;GAAH,CAAlC;EACA,IAAAM,qBAAA,GAAwBC,qBAAyB,CAAC;MAAEN,WAAW,EAAXA;KAAH,CAAjD;IAAQO,IAAR,GAAAF,qBAAA,CAAQE,IAAR;IAAcC,KAAd,GAAAH,qBAAA,CAAcG,KAAd;EACA,IAAMC,MAAM,GAAG;IACbC,MAAM,EAAE,CAACH,IAAD,EAAOL,QAAQ,GAAK;MAAA;MAAA;MAAA;KAAL,GAA0C,IAAzD,EAAiE;MAAA;QAAA;;KAAjE,CADK;IAEbS,QAAQ,EAAE,CAAG;MAAA;KAAH,EAAaV,QAAQ,GAAK;MAAA;KAAL,GAAgB;MAAA;KAArC,EAA6CE,cAA7C,CAFG;IAGbK,KAAK,EAAE,CAACA,KAAD;GAHT;EAMA,OAAO;IAAEC,MAAM,EAAEG,SAAS,CAACH,MAAD;GAA1B;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}