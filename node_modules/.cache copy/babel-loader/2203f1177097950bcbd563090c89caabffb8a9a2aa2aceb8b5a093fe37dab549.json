{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { assignRef, __DEV__ } from '@sajari/react-sdk-utils';\nimport { forwardRef } from 'react';\nimport { jsx } from '@emotion/core/jsx-runtime';\nimport Box from '../../Box/index.esm.js';\nimport { useTabContext } from '../context.esm.js';\nvar _excluded = [\"children\", \"selected\", \"selectedPanelRef\", \"id\", \"styles\"];\nvar TabPanel = /*#__PURE__*/forwardRef(function (props, _ref) {\n  var children = props.children,\n    selected = props.selected,\n    selectedPanelRef = props.selectedPanelRef,\n    id = props.id,\n    stylesProp = props.styles,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useTabContext = useTabContext(),\n    alwaysRenderChildren = _useTabContext.alwaysRenderChildren;\n  return jsx(Box, _extends({\n    ref: function ref(node) {\n      if (selected && selectedPanelRef) {\n        assignRef(selectedPanelRef, node);\n      }\n      assignRef(_ref, node);\n    },\n    role: \"tabpanel\",\n    tabIndex: -1,\n    \"aria-labelledby\": \"tab:\" + id,\n    hidden: !selected,\n    id: \"panel:\" + id,\n    css: stylesProp\n  }, rest, {\n    children: (alwaysRenderChildren || selected) && children\n  }));\n});\nif (__DEV__) {\n  TabPanel.displayName = 'TabPanel';\n}\nexport default TabPanel;","map":{"version":3,"names":["TabPanel","forwardRef","props","_ref","children","selected","selectedPanelRef","id","stylesProp","styles","rest","_objectWithoutPropertiesLoose","_excluded","_useTabContext","useTabContext","alwaysRenderChildren","jsx","Box","_extends","ref","node","assignRef","role","tabIndex","hidden","css","__DEV__","displayName"],"sources":["C:\\Users\\이세희\\Documents\\project_oyr\\node_modules\\@sajari\\react-components\\src\\Tabs\\TabPanel\\index.tsx"],"sourcesContent":["import { __DEV__, assignRef } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../../Box';\nimport { useTabContext } from '../context';\nimport { TabPanelProps } from './types';\n\nconst TabPanel = React.forwardRef((props: TabPanelProps, ref: React.Ref<HTMLDivElement>) => {\n  const { children, selected, selectedPanelRef, id, styles: stylesProp, ...rest } = props;\n  const { alwaysRenderChildren } = useTabContext();\n\n  return (\n    <Box\n      ref={(node: HTMLDivElement) => {\n        if (selected && selectedPanelRef) {\n          assignRef(selectedPanelRef, node);\n        }\n        assignRef(ref, node);\n      }}\n      role=\"tabpanel\"\n      tabIndex={-1}\n      aria-labelledby={`tab:${id}`}\n      hidden={!selected}\n      id={`panel:${id}`}\n      css={stylesProp}\n      {...rest}\n    >\n      {(alwaysRenderChildren || selected) && children}\n    </Box>\n  );\n});\n\nif (__DEV__) {\n  TabPanel.displayName = 'TabPanel';\n}\n\nexport default TabPanel;\nexport type { TabPanelProps };\n"],"mappings":";;;;;;;AAOA,IAAMA,QAAQ,gBAAGC,UAAA,CAAiB,UAACC,KAAD,EAAuBC,IAAvB;EAChC,IAAQC,QAAR,GAAkFF,KAAlF,CAAQE,QAAR;IAAkBC,QAAlB,GAAkFH,KAAlF,CAAkBG,QAAlB;IAA4BC,gBAA5B,GAAkFJ,KAAlF,CAA4BI,gBAA5B;IAA8CC,EAA9C,GAAkFL,KAAlF,CAA8CK,EAA9C;IAA0DC,UAA1D,GAAkFN,KAAlF,CAAkDO,MAAlD;IAAyEC,IAAzE,GAAAC,6BAAA,CAAkFT,KAAlF,EAAAU,SAAA;EACA,IAAAC,cAAA,GAAiCC,aAAa,EAA9C;IAAQC,oBAAR,GAAAF,cAAA,CAAQE,oBAAR;EAEA,OACEC,GAAA,CAACC,GAAD,EAAAC,QAAA;IACEC,GAAG,EAAE,SAAAA,IAACC,IAAD;MACH,IAAIf,QAAQ,IAAIC,gBAAhB,EAAkC;QAChCe,SAAS,CAACf,gBAAD,EAAmBc,IAAnB,CAAT;;MAEFC,SAAS,CAAClB,IAAD,EAAMiB,IAAN,CAAT;KALJ;IAOEE,IAAI,EAAC,UAPP;IAQEC,QAAQ,EAAE,CAAC,CARb;IASE,4BAAwBhB,EAT1B;IAUEiB,MAAM,EAAE,CAACnB,QAVX;IAWEE,EAAE,aAAWA,EAXf;IAYEkB,GAAG,EAAEjB;KACDE,IAbN;IAAAN,QAAA,EAeG,CAACW,oBAAoB,IAAIV,QAAzB,KAAsCD;KAhB3C;AAmBD,CAvBgB,CAAjB;AAyBA,IAAIsB,OAAJ,EAAa;EACX1B,QAAQ,CAAC2B,WAAT,GAAuB,UAAvB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}