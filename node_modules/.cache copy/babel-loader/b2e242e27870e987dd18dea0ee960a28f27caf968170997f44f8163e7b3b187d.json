{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flagEnabled = flagEnabled;\nexports.issueFlagNotices = issueFlagNotices;\nexports.default = void 0;\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _log = _interopRequireDefault(require(\"./util/log\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst featureFlags = {\n  future: [],\n  experimental: ['optimizeUniversalDefaults']\n};\nfunction flagEnabled(config, flag) {\n  if (featureFlags.future.includes(flag)) {\n    return config.future === 'all' || _lodash.default.get(config, ['future', flag], false);\n  }\n  if (featureFlags.experimental.includes(flag)) {\n    return config.experimental === 'all' || _lodash.default.get(config, ['experimental', flag], false);\n  }\n  return false;\n}\nfunction experimentalFlagsEnabled(config) {\n  if (config.experimental === 'all') {\n    return featureFlags.experimental;\n  }\n  return Object.keys(_lodash.default.get(config, 'experimental', {})).filter(flag => featureFlags.experimental.includes(flag) && config.experimental[flag]);\n}\nfunction issueFlagNotices(config) {\n  if (process.env.JEST_WORKER_ID !== undefined) {\n    return;\n  }\n  if (experimentalFlagsEnabled(config).length > 0) {\n    const changes = experimentalFlagsEnabled(config).map(s => _chalk.default.yellow(s)).join(', ');\n    _log.default.warn([`You have enabled experimental features: ${changes}`, 'Experimental features are not covered by semver, may introduce breaking changes, and can change at any time.']);\n  }\n}\nvar _default = featureFlags;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","flagEnabled","issueFlagNotices","default","_lodash","_interopRequireDefault","require","_chalk","_log","obj","__esModule","featureFlags","future","experimental","config","flag","includes","get","experimentalFlagsEnabled","keys","filter","process","env","JEST_WORKER_ID","undefined","length","changes","map","s","yellow","join","warn","_default"],"sources":["C:/Users/이세희/Documents/project_oyr/node_modules/@sajari/react-sdk-utils/node_modules/tailwindcss/lib/featureFlags.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flagEnabled = flagEnabled;\nexports.issueFlagNotices = issueFlagNotices;\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _log = _interopRequireDefault(require(\"./util/log\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst featureFlags = {\n  future: [],\n  experimental: ['optimizeUniversalDefaults']\n};\n\nfunction flagEnabled(config, flag) {\n  if (featureFlags.future.includes(flag)) {\n    return config.future === 'all' || _lodash.default.get(config, ['future', flag], false);\n  }\n\n  if (featureFlags.experimental.includes(flag)) {\n    return config.experimental === 'all' || _lodash.default.get(config, ['experimental', flag], false);\n  }\n\n  return false;\n}\n\nfunction experimentalFlagsEnabled(config) {\n  if (config.experimental === 'all') {\n    return featureFlags.experimental;\n  }\n\n  return Object.keys(_lodash.default.get(config, 'experimental', {})).filter(flag => featureFlags.experimental.includes(flag) && config.experimental[flag]);\n}\n\nfunction issueFlagNotices(config) {\n  if (process.env.JEST_WORKER_ID !== undefined) {\n    return;\n  }\n\n  if (experimentalFlagsEnabled(config).length > 0) {\n    const changes = experimentalFlagsEnabled(config).map(s => _chalk.default.yellow(s)).join(', ');\n\n    _log.default.warn([`You have enabled experimental features: ${changes}`, 'Experimental features are not covered by semver, may introduce breaking changes, and can change at any time.']);\n  }\n}\n\nvar _default = featureFlags;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,WAAW,GAAGA,WAAW;AACjCF,OAAO,CAACG,gBAAgB,GAAGA,gBAAgB;AAC3CH,OAAO,CAACI,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAEvD,IAAIC,MAAM,GAAGF,sBAAsB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;AAErD,IAAIE,IAAI,GAAGH,sBAAsB,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;AAExD,SAASD,sBAAsBA,CAACI,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEN,OAAO,EAAEM;EAAI,CAAC;AAAE;AAE9F,MAAME,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,YAAY,EAAE,CAAC,2BAA2B;AAC5C,CAAC;AAED,SAASZ,WAAWA,CAACa,MAAM,EAAEC,IAAI,EAAE;EACjC,IAAIJ,YAAY,CAACC,MAAM,CAACI,QAAQ,CAACD,IAAI,CAAC,EAAE;IACtC,OAAOD,MAAM,CAACF,MAAM,KAAK,KAAK,IAAIR,OAAO,CAACD,OAAO,CAACc,GAAG,CAACH,MAAM,EAAE,CAAC,QAAQ,EAAEC,IAAI,CAAC,EAAE,KAAK,CAAC;EACxF;EAEA,IAAIJ,YAAY,CAACE,YAAY,CAACG,QAAQ,CAACD,IAAI,CAAC,EAAE;IAC5C,OAAOD,MAAM,CAACD,YAAY,KAAK,KAAK,IAAIT,OAAO,CAACD,OAAO,CAACc,GAAG,CAACH,MAAM,EAAE,CAAC,cAAc,EAAEC,IAAI,CAAC,EAAE,KAAK,CAAC;EACpG;EAEA,OAAO,KAAK;AACd;AAEA,SAASG,wBAAwBA,CAACJ,MAAM,EAAE;EACxC,IAAIA,MAAM,CAACD,YAAY,KAAK,KAAK,EAAE;IACjC,OAAOF,YAAY,CAACE,YAAY;EAClC;EAEA,OAAOhB,MAAM,CAACsB,IAAI,CAACf,OAAO,CAACD,OAAO,CAACc,GAAG,CAACH,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,CAACM,MAAM,CAACL,IAAI,IAAIJ,YAAY,CAACE,YAAY,CAACG,QAAQ,CAACD,IAAI,CAAC,IAAID,MAAM,CAACD,YAAY,CAACE,IAAI,CAAC,CAAC;AAC3J;AAEA,SAASb,gBAAgBA,CAACY,MAAM,EAAE;EAChC,IAAIO,OAAO,CAACC,GAAG,CAACC,cAAc,KAAKC,SAAS,EAAE;IAC5C;EACF;EAEA,IAAIN,wBAAwB,CAACJ,MAAM,CAAC,CAACW,MAAM,GAAG,CAAC,EAAE;IAC/C,MAAMC,OAAO,GAAGR,wBAAwB,CAACJ,MAAM,CAAC,CAACa,GAAG,CAACC,CAAC,IAAIrB,MAAM,CAACJ,OAAO,CAAC0B,MAAM,CAACD,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC;IAE9FtB,IAAI,CAACL,OAAO,CAAC4B,IAAI,CAAC,CAAE,2CAA0CL,OAAQ,EAAC,EAAE,8GAA8G,CAAC,CAAC;EAC3L;AACF;AAEA,IAAIM,QAAQ,GAAGrB,YAAY;AAC3BZ,OAAO,CAACI,OAAO,GAAG6B,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}