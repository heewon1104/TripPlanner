{"ast":null,"code":"import { mapStyles } from '@sajari/react-sdk-utils';\nimport '../hooks/useBorderRadius.esm.js';\nimport '../hooks/useDropdownItemStyles.esm.js';\nimport '../hooks/useDropdownStyles.esm.js';\nimport '../hooks/useFirstRender.esm.js';\nimport useFontSize from '../hooks/useFontSize.esm.js';\nimport '../hooks/useInputStyles.esm.js';\nimport '../hooks/useJustifyContent.esm.js';\nimport '../hooks/useSpacing.esm.js';\nimport '../hooks/useVoiceInput.esm.js';\nimport 'use-resize-observer/polyfilled';\nimport { mapTruncateValue } from '../utils/styles.esm.js';\nfunction useTextStyles(_ref) {\n  var as = _ref.as,\n    truncate = _ref.truncate,\n    size = _ref.size;\n  var sizeStyles = useFontSize({\n    size: size\n  });\n  var styles = {\n    container: [{\n      \"padding\": \"0px\",\n      \"margin\": \"0px\"\n    }, mapTruncateValue(truncate), sizeStyles]\n  };\n  switch (as) {\n    case 'small':\n      styles.container.push({\n        \"fontSize\": \"0.875em\"\n      });\n      break;\n    case 'pre':\n    case 'code':\n      styles.container.push({\n        \"fontFamily\": \"ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace\",\n        \"fontWeight\": \"400\",\n        \"fontSize\": \"0.9375em\"\n      });\n      break;\n    case 'mark':\n      styles.container.push({\n        \"paddingLeft\": \"0.25em\",\n        \"paddingRight\": \"0.25em\",\n        \"--tw-text-opacity\": \"1\",\n        \"color\": \"rgba(31, 41, 55, var(--tw-text-opacity))\",\n        \"--tw-bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(254, 243, 199, var(--tw-bg-opacity))\"\n      });\n      break;\n  }\n  if (as === 'code') {\n    styles.container.push({\n      \"--tw-text-opacity\": \"1\",\n      \"color\": \"rgba(239, 68, 68, var(--tw-text-opacity))\"\n    });\n  }\n  return mapStyles(styles);\n}\nexport default useTextStyles;","map":{"version":3,"names":["useTextStyles","_ref","as","truncate","size","sizeStyles","useFontSize","styles","container","mapTruncateValue","push","mapStyles"],"sources":["C:\\Users\\이세희\\Documents\\project_oyr\\node_modules\\@sajari\\react-components\\src\\Text\\styles.ts"],"sourcesContent":["import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useFontSize } from '../hooks';\nimport { mapTruncateValue } from '../utils/styles';\nimport { TextElement, TextProps } from './types';\n\ninterface UseTextStylesProps {\n  as: TextElement;\n  truncate: TextProps['truncate'];\n  size: TextProps['size'];\n}\n\nexport default function useTextStyles({ as, truncate, size }: UseTextStylesProps) {\n  const sizeStyles = useFontSize({ size });\n\n  const styles = {\n    container: [tw`p-0 m-0`, mapTruncateValue(truncate), sizeStyles],\n  };\n\n  switch (as) {\n    case 'small':\n      styles.container.push(tw`text-sm`);\n      break;\n\n    case 'pre':\n    case 'code':\n      styles.container.push(tw`font-mono font-normal text-code-inline`);\n      break;\n\n    case 'mark':\n      styles.container.push(tw`px-1 text-gray-800 bg-yellow-100`);\n      break;\n\n    default:\n      break;\n  }\n\n  if (as === 'code') {\n    styles.container.push(tw`text-red-500`);\n  }\n\n  return mapStyles(styles);\n}\n"],"mappings":";;;;;;;;;;;;SAawBA,cAAAC,IAAA;MAAgBC,EAAA,GAAAD,IAAA,CAAAC,EAAA;IAAIC,QAAA,GAAAF,IAAA,CAAAE,QAAA;IAAUC,IAAA,GAAAH,IAAA,CAAAG,IAAA;EACpD,IAAMC,UAAU,GAAGC,WAAW,CAAC;IAAEF,IAAI,EAAJA;GAAH,CAA9B;EAEA,IAAMG,MAAM,GAAG;IACbC,SAAS,EAAE,CAAG;MAAA;MAAA;KAAH,EAAcC,gBAAgB,CAACN,QAAD,CAA9B,EAA0CE,UAA1C;GADb;EAIA,QAAQH,EAAR;IACE,KAAK,OAAL;MACEK,MAAM,CAACC,SAAP,CAAiBE,IAAjB,CAAwB;QAAA;OAAxB;MACA;IAEF,KAAK,KAAL;IACA,KAAK,MAAL;MACEH,MAAM,CAACC,SAAP,CAAiBE,IAAjB,CAAwB;QAAA;QAAA;QAAA;OAAxB;MACA;IAEF,KAAK,MAAL;MACEH,MAAM,CAACC,SAAP,CAAiBE,IAAjB,CAAwB;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;OAAxB;MACA;;EAMJ,IAAIR,EAAE,KAAK,MAAX,EAAmB;IACjBK,MAAM,CAACC,SAAP,CAAiBE,IAAjB,CAAwB;MAAA;MAAA;KAAxB;;EAGF,OAAOC,SAAS,CAACJ,MAAD,CAAhB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}