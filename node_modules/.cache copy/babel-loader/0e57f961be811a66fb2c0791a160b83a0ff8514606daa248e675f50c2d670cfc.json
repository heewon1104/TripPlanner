{"ast":null,"code":"const plugin = require('tailwindcss/plugin');\nconst merge = require('lodash.merge');\nconst castArray = require('lodash.castarray');\nconst uniq = require('lodash.uniq');\nconst styles = require('./styles');\nconst {\n  isUsableColor\n} = require('./utils');\nconst computed = {\n  // Reserved for future \"magic properties\", for example:\n  // bulletColor: (color) => ({ 'ul > li::before': { backgroundColor: color } }),\n};\nfunction configToCss() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return merge({}, ...Object.keys(config).filter(key => computed[key]).map(key => computed[key](config[key])), ...castArray(config.css || {}));\n}\nmodule.exports = plugin.withOptions(function () {\n  let {\n    modifiers,\n    className = 'prose'\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (_ref) {\n    let {\n      addComponents,\n      theme,\n      variants\n    } = _ref;\n    const DEFAULT_MODIFIERS = ['DEFAULT', 'sm', 'lg', 'xl', '2xl', ...Object.entries(theme('colors')).filter(_ref2 => {\n      let [color, values] = _ref2;\n      return isUsableColor(color, values);\n    }).map(_ref3 => {\n      let [color] = _ref3;\n      return color;\n    })];\n    modifiers = modifiers === undefined ? DEFAULT_MODIFIERS : modifiers;\n    const config = theme('typography');\n    const all = uniq(['DEFAULT', ...modifiers, ...Object.keys(config).filter(modifier => !DEFAULT_MODIFIERS.includes(modifier))]);\n    addComponents(all.map(modifier => ({\n      [modifier === 'DEFAULT' ? `.${className}` : `.${className}-${modifier}`]: configToCss(config[modifier])\n    })), variants('typography'));\n  };\n}, () => ({\n  theme: {\n    typography: styles\n  },\n  variants: {\n    typography: ['responsive']\n  }\n}));","map":{"version":3,"names":["plugin","require","merge","castArray","uniq","styles","isUsableColor","computed","configToCss","config","arguments","length","undefined","Object","keys","filter","key","map","css","module","exports","withOptions","modifiers","className","_ref","addComponents","theme","variants","DEFAULT_MODIFIERS","entries","_ref2","color","values","_ref3","all","modifier","includes","typography"],"sources":["C:/Users/이세희/Documents/project_oyr/node_modules/@tailwindcss/typography/src/index.js"],"sourcesContent":["const plugin = require('tailwindcss/plugin')\nconst merge = require('lodash.merge')\nconst castArray = require('lodash.castarray')\nconst uniq = require('lodash.uniq')\nconst styles = require('./styles')\nconst { isUsableColor } = require('./utils')\n\nconst computed = {\n  // Reserved for future \"magic properties\", for example:\n  // bulletColor: (color) => ({ 'ul > li::before': { backgroundColor: color } }),\n}\n\nfunction configToCss(config = {}) {\n  return merge(\n    {},\n    ...Object.keys(config)\n      .filter((key) => computed[key])\n      .map((key) => computed[key](config[key])),\n    ...castArray(config.css || {})\n  )\n}\n\nmodule.exports = plugin.withOptions(\n  ({ modifiers, className = 'prose' } = {}) => {\n    return function ({ addComponents, theme, variants }) {\n      const DEFAULT_MODIFIERS = [\n        'DEFAULT',\n        'sm',\n        'lg',\n        'xl',\n        '2xl',\n        ...Object.entries(theme('colors'))\n          .filter(([color, values]) => {\n            return isUsableColor(color, values)\n          })\n          .map(([color]) => color),\n      ]\n      modifiers = modifiers === undefined ? DEFAULT_MODIFIERS : modifiers\n      const config = theme('typography')\n\n      const all = uniq([\n        'DEFAULT',\n        ...modifiers,\n        ...Object.keys(config).filter((modifier) => !DEFAULT_MODIFIERS.includes(modifier)),\n      ])\n\n      addComponents(\n        all.map((modifier) => ({\n          [modifier === 'DEFAULT' ? `.${className}` : `.${className}-${modifier}`]: configToCss(\n            config[modifier]\n          ),\n        })),\n        variants('typography')\n      )\n    }\n  },\n  () => ({\n    theme: { typography: styles },\n    variants: { typography: ['responsive'] },\n  })\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}