{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uC138\\uD76C\\\\Documents\\\\project_oyr\\\\src\\\\gridlayout.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GridLayout from \"react-grid-layout\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = [{\n  i: \"Japan\",\n  x: 0,\n  y: 0,\n  w: 1,\n  h: 1\n}, {\n  i: \"Vietnam\",\n  x: 1,\n  y: 0,\n  w: 1,\n  h: 1\n}, {\n  i: \"Jeju\",\n  x: 0,\n  y: 1,\n  w: 1,\n  h: 1\n}, {\n  i: \"+\",\n  x: 1,\n  y: 1,\n  w: 1,\n  h: 1\n}];\nconst GridItemWrapper = styled.div`\n  background: #f5f5f5;\n  cursor: pointer; /* 커서 모양을 포인터로 변경하여 클릭 가능한 요소임을 표시 */\n`;\n_c = GridItemWrapper;\nconst GridItemContent = styled.div`\n  padding: 8px;\n`;\n_c2 = GridItemContent;\nconst Root = styled.div`\n  padding: 16px;\n`;\n_c3 = Root;\nconst GridComponent = () => {\n  _s();\n  const [selectedItem, setSelectedItem] = useState(null);\n  const handleItemClick = item => {\n    if (selectedItem === item) {\n      // 이미 선택된 상태에서 더블클릭하면 해당 URL로 이동\n      window.location.href = `/${item}`;\n    } else {\n      setSelectedItem(item);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Root, {\n    children: /*#__PURE__*/_jsxDEV(GridLayout, {\n      layout: layout,\n      cols: 4,\n      rowHeight: 100,\n      width: 1000,\n      children: layout.map(item => /*#__PURE__*/_jsxDEV(GridItemWrapper, {\n        onClick: () => handleItemClick(item.i),\n        onDoubleClick: () => handleItemClick(item.i) // 더블클릭 시에도 동일한 핸들러 실행\n        ,\n        style: {\n          border: selectedItem === item.i ? \"#ffcc00\" : \"#0099a4\" // 선택된 아이템에 하이라이트 효과 적용\n        },\n        children: /*#__PURE__*/_jsxDEV(GridItemContent, {\n          children: item.i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, item.i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(GridComponent, \"1YGeiIMlDw0BzM8kVWnRaE6POaA=\");\n_c4 = GridComponent;\nexport default GridComponent;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GridItemWrapper\");\n$RefreshReg$(_c2, \"GridItemContent\");\n$RefreshReg$(_c3, \"Root\");\n$RefreshReg$(_c4, \"GridComponent\");","map":{"version":3,"names":["React","useState","GridLayout","styled","jsxDEV","_jsxDEV","layout","i","x","y","w","h","GridItemWrapper","div","_c","GridItemContent","_c2","Root","_c3","GridComponent","_s","selectedItem","setSelectedItem","handleItemClick","item","window","location","href","children","cols","rowHeight","width","map","onClick","onDoubleClick","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["C:/Users/이세희/Documents/project_oyr/src/gridlayout.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport GridLayout from \"react-grid-layout\";\r\nimport styled from \"styled-components\";\r\n\r\nconst layout = [\r\n  { i: \"Japan\", x: 0, y: 0, w: 1, h: 1 },\r\n  { i: \"Vietnam\", x: 1, y: 0, w: 1, h: 1 },\r\n  { i: \"Jeju\", x: 0, y: 1, w: 1, h: 1 },\r\n  { i: \"+\", x: 1, y: 1, w: 1, h: 1 },\r\n];\r\n\r\nconst GridItemWrapper = styled.div`\r\n  background: #f5f5f5;\r\n  cursor: pointer; /* 커서 모양을 포인터로 변경하여 클릭 가능한 요소임을 표시 */\r\n`;\r\n\r\nconst GridItemContent = styled.div`\r\n  padding: 8px;\r\n`;\r\n\r\nconst Root = styled.div`\r\n  padding: 16px;\r\n`;\r\n\r\nconst GridComponent = () => {\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  const handleItemClick = (item) => {\r\n    if (selectedItem === item) {\r\n      // 이미 선택된 상태에서 더블클릭하면 해당 URL로 이동\r\n      window.location.href = `/${item}`;\r\n    } else {\r\n      setSelectedItem(item);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <GridLayout layout={layout} cols={4} rowHeight={100} width={1000}>\r\n        {layout.map((item) => (\r\n          <GridItemWrapper\r\n            key={item.i}\r\n            onClick={() => handleItemClick(item.i)}\r\n            onDoubleClick={() => handleItemClick(item.i)} // 더블클릭 시에도 동일한 핸들러 실행\r\n            style={{\r\n              border: selectedItem === item.i ? \"#ffcc00\" : \"#0099a4\", // 선택된 아이템에 하이라이트 효과 적용\r\n            }}\r\n          >\r\n            <GridItemContent>{item.i}</GridItemContent>\r\n          </GridItemWrapper>\r\n        ))}\r\n      </GridLayout>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default GridComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}