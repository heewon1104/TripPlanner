{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from './_virtual/_rollupPluginBabelHelpers.js';\nimport { isNumber } from './assertion.esm.js';\nimport { isSSR } from './ssr.esm.js';\nvar _excluded = [\"neutral\", \"language\"];\nfunction clamp(input, min, max) {\n  if (input === void 0) {\n    input = 0;\n  }\n  if (min === void 0) {\n    min = 0;\n  }\n  if (max === void 0) {\n    max = 255;\n  }\n  return Math.min(Math.max(input, min), max);\n}\nfunction closest(target, values) {\n  var match = values.reduce(function (prev, value) {\n    return Math.abs(value - target) < Math.abs(prev - target) ? value : prev;\n  });\n  return [values.indexOf(match), match];\n}\nfunction getDecimalPlaces(value) {\n  var match = /(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/.exec(value.toString());\n  if (!match) {\n    return 0;\n  }\n  return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n}\nfunction round(input, places) {\n  return parseFloat(input.toFixed(places));\n}\nfunction roundToStep(input, step) {\n  var places = getDecimalPlaces(step);\n  return round(Math.round(input / step) * step, places);\n}\nfunction formatNumber(input, options) {\n  var _ref = options != null ? options : {},\n    _ref$neutral = _ref.neutral,\n    neutral = _ref$neutral === void 0 ? true : _ref$neutral,\n    _ref$language = _ref.language,\n    language = _ref$language === void 0 ? !isSSR() ? navigator.language : 'en-US' : _ref$language,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (!isNumber(input)) {\n    return input;\n  }\n  return new Intl.NumberFormat(neutral ? language.split('-')[0] : language, rest).format(input);\n}\nfunction formatPrice(input, options) {\n  var price = input;\n  var format = function format(val) {\n    var value = Number(val);\n    if (!isNumber(value)) {\n      return input.toString();\n    }\n    return formatNumber(value, _extends({\n      style: 'currency'\n    }, options));\n  };\n  if (!Array.isArray(price)) {\n    return format(price);\n  }\n  var prices = price.map(Number);\n  var min = Math.min.apply(Math, prices);\n  var max = Math.max.apply(Math, prices);\n  if (min === max) {\n    return format(min);\n  }\n  return format(min) + \"\\u2013\" + format(max);\n}\nexport { clamp, closest, formatNumber, formatPrice, getDecimalPlaces, round, roundToStep };","map":{"version":3,"names":["clamp","input","min","max","Math","closest","target","values","match","reduce","prev","value","abs","indexOf","getDecimalPlaces","exec","toString","length","round","places","parseFloat","toFixed","roundToStep","step","formatNumber","options","_ref","neutral","_ref$neutral","language","_ref$language","isSSR","navigator","rest","_objectWithoutPropertiesLoose","_excluded","isNumber","Intl","NumberFormat","split","format","formatPrice","price","val","Number","_extends","style","Array","isArray","prices","map","apply"],"sources":["C:\\Users\\이세희\\Documents\\project_oyr\\node_modules\\@sajari\\react-sdk-utils\\src\\number.ts"],"sourcesContent":["import { isNumber } from './assertion';\nimport { isSSR } from './ssr';\n\n/**\n * Returns a number whose value is limited to the given range.\n *\n * Example: limit the output of this computation to between 0 and 255\n * clamp((x * 255), 0, 255)\n *\n * @param input\n * @param min The lower boundary of the output range\n * @param max The upper boundary of the output range\n * @returns A number in the range [min, max]\n * @type Number\n */\nexport function clamp(input = 0, min = 0, max = 255): number {\n  return Math.min(Math.max(input, min), max);\n}\n\n/**\n * Find the number closest to a target value\n * @param target The target value\n * @param values The range of values to check\n */\nexport function closest(target: number, values: number[]): [number, number] {\n  const match = values.reduce((prev, value) => (Math.abs(value - target) < Math.abs(prev - target) ? value : prev));\n  return [values.indexOf(match), match];\n}\n\n/**\n * Get the number of decimal places\n * @param value\n */\nexport function getDecimalPlaces(value: number): number {\n  const match = /(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/.exec(value.toString());\n\n  if (!match) {\n    return 0;\n  }\n\n  return Math.max(\n    0,\n    // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) -\n      // Adjust for scientific notation.\n      (match[2] ? +match[2] : 0),\n  );\n}\n\n/**\n * Round to decimal places\n * @param input - the number to round\n * @param places - how many decimal places to round to\n */\nexport function round(input: number, places: number): number {\n  return parseFloat(input.toFixed(places));\n}\n\n/**\n * Round to the nearest step\n * @param input - the number to round\n * @param step - the step to round to\n */\nexport function roundToStep(input: number, step: number): number {\n  const places = getDecimalPlaces(step);\n  return round(Math.round(input / step) * step, places);\n}\n\ninterface FormatNumberOptions extends Intl.NumberFormatOptions {\n  // Whether to use the neutral locale (e.g. en rather than en-US)\n  neutral?: boolean;\n  // The language to use for formatting (e.g. en or en-US)\n  language?: string;\n}\n\n/**\n * Format a number into a localised format\n *\n * @param input - Number to format\n * @param options - Formatting options\n */\nexport function formatNumber(input: number, options?: FormatNumberOptions): string {\n  const { neutral = true, language = !isSSR() ? navigator.language : 'en-US', ...rest } = options ?? {};\n\n  if (!isNumber(input)) {\n    return input;\n  }\n\n  return new Intl.NumberFormat(neutral ? language.split('-')[0] : language, rest).format(input);\n}\n\n/**\n * Format a price or price range to display\n */\nexport function formatPrice(input: string | string[] | number, options: Omit<FormatNumberOptions, 'style'>): string {\n  const price = input;\n  const format = (val: string | number | undefined) => {\n    const value = Number(val);\n\n    if (!isNumber(value)) {\n      return input.toString();\n    }\n\n    return formatNumber(value, { style: 'currency', ...options });\n  };\n\n  if (!Array.isArray(price)) {\n    return format(price);\n  }\n\n  const prices = price.map(Number);\n  const min = Math.min(...prices);\n  const max = Math.max(...prices);\n\n  if (min === max) {\n    return format(min);\n  }\n\n  return `${format(min)}–${format(max)}`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}