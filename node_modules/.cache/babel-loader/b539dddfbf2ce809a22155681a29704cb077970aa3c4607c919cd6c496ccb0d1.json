{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/reactstudy/reactstudy/src/components/PlannerWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PlannerWeather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlannerWeather(_ref) {\n  _s();\n  let {\n    isOpen,\n    closeModal,\n    tripLocation,\n    tripStartDate\n  } = _ref;\n  const [coords, saveCoords] = useState();\n  const [averageTemp, setAverageTemp] = useState();\n  const [weatherComment, setWeatherComment] = useState('');\n  function handleGeoSucc(position) {\n    const latitude = position.coords.latitude; // 위도\n    const longitude = position.coords.longitude; // 경도\n    const coordsObj = {\n      latitude,\n      longitude\n    };\n    saveCoords(coordsObj);\n    getWeatherData(latitude, longitude);\n  }\n  function handleGeoErr(err) {\n    console.log(\"geo err! \" + err);\n  }\n  function requestCoords() {\n    navigator.geolocation.getCurrentPosition(handleGeoSucc, handleGeoErr);\n  }\n  function getWeatherData(lat, lon) {\n    const oneYearAgoTimestamp = Math.floor(oneYearAgo.getTime() / 1000);\n    fetch(`https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${oneYearAgoTimestamp}&appid=ad14089cb0bfefe6bd1b977b00f4f4b0`).then(data => {\n      if (data && data.current && data.current.temp) {\n        const averageTemp = data.current.temp;\n        setAverageTemp(averageTemp);\n        const weather = data.current.weather[0].description;\n        setWeatherComment(getWeatherComment(averageTemp, weather));\n      } else {\n        console.log('Weather data is incomplete.');\n      }\n    }).catch(error => {\n      console.log('Error fetching weather data:', error);\n    });\n  }\n  function getWeatherComment(temperature, weather) {\n    let comment = '';\n    if (temperature > 25) {\n      comment += '덥고 ';\n    } else if (temperature < 10) {\n      comment += '추워요. ';\n    }\n    comment += weather;\n    return comment;\n  }\n  useEffect(() => {\n    if (isOpen) {\n      requestCoords();\n    }\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-container\",\n    style: {\n      display: isOpen ? 'block' : 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-background\",\n      onClick: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal-title\",\n        children: tripLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"average-temperature\",\n          children: [\"~\\uC6D4 \\uD3C9\\uADE0 \\uAE30\\uC628: \", averageTemp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-comment\",\n          children: weatherComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(PlannerWeather, \"DYE/y4b2ACwwIYO1FWh+EODUNdo=\");\n_c = PlannerWeather;\nexport default PlannerWeather;\n\n//ad14089cb0bfefe6bd1b977b00f4f4b0\nvar _c;\n$RefreshReg$(_c, \"PlannerWeather\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PlannerWeather","_ref","_s","isOpen","closeModal","tripLocation","tripStartDate","coords","saveCoords","averageTemp","setAverageTemp","weatherComment","setWeatherComment","handleGeoSucc","position","latitude","longitude","coordsObj","getWeatherData","handleGeoErr","err","console","log","requestCoords","navigator","geolocation","getCurrentPosition","lat","lon","oneYearAgoTimestamp","Math","floor","oneYearAgo","getTime","fetch","then","data","current","temp","weather","description","getWeatherComment","catch","error","temperature","comment","className","style","display","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/reactstudy/reactstudy/src/components/PlannerWeather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PlannerWeather.css';\n\nfunction PlannerWeather({ isOpen, closeModal, tripLocation, tripStartDate }) {\n  const [coords, saveCoords] = useState();\n  const [averageTemp, setAverageTemp] = useState();\n  const [weatherComment, setWeatherComment] = useState('');\n\n  function handleGeoSucc(position) {\n    const latitude = position.coords.latitude;  // 위도\n    const longitude = position.coords.longitude;  // 경도\n    const coordsObj = {\n      latitude,\n      longitude\n    };\n    saveCoords(coordsObj);\n    getWeatherData(latitude, longitude);\n  }\n\n  function handleGeoErr(err) {\n    console.log(\"geo err! \" + err);\n  }\n\n  function requestCoords() {\n    navigator.geolocation.getCurrentPosition(handleGeoSucc, handleGeoErr);\n  }\n\n  function getWeatherData(lat, lon) {\n    const oneYearAgoTimestamp = Math.floor(oneYearAgo.getTime() / 1000);\n\n    fetch(`https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${oneYearAgoTimestamp}&appid=ad14089cb0bfefe6bd1b977b00f4f4b0`)\n      .then(data => {\n        if (data && data.current && data.current.temp) {\n          const averageTemp = data.current.temp;\n          setAverageTemp(averageTemp);\n          const weather = data.current.weather[0].description;\n          setWeatherComment(getWeatherComment(averageTemp, weather));\n        } else {\n          console.log('Weather data is incomplete.');\n        }\n      })\n      .catch(error => {\n        console.log('Error fetching weather data:', error);\n      });\n  }\n\n  function getWeatherComment(temperature, weather) {\n    let comment = '';\n    if (temperature > 25) {\n      comment += '덥고 ';\n    } else if (temperature < 10) {\n      comment += '추워요. ';\n    }\n    comment += weather;\n    return comment;\n  }\n\n  useEffect(() => {\n    if (isOpen) {\n      requestCoords();\n    }\n  }, [isOpen]);\n\n  return (\n    <div className=\"modal-container\" style={{ display: isOpen ? 'block' : 'none' }}>\n      <div className=\"modal-background\" onClick={closeModal}></div>\n      <div className=\"modal-content\">\n        <h2 className=\"modal-title\">{tripLocation}</h2>\n        <div className=\"weather-info\">\n          <div className=\"average-temperature\">~월 평균 기온: {averageTemp}°C</div>\n          <div className=\"weather-comment\">{weatherComment}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlannerWeather;\n\n\n\n\n//ad14089cb0bfefe6bd1b977b00f4f4b0"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}