{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/reactstudy/reactstudy/src/components/PlannerWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherInfo() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  useEffect(() => {\n    const apiKey = 'GBVRL35WHAYYD6B8E4PD84AFX';\n    const locationName = 'Tokyo';\n    const initialStartDate = new Date('2023-08-18');\n    const oneYearAgoStartDate = new Date(initialStartDate);\n    oneYearAgoStartDate.setFullYear(oneYearAgoStartDate.getFullYear() - 1);\n    const initialEndDate = new Date('2023-09-08');\n    const oneYearAgoEndDate = new Date(initialEndDate);\n    oneYearAgoEndDate.setFullYear(oneYearAgoEndDate.getFullYear() - 1);\n    const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${locationName}/${oneYearAgoStartDate.toISOString()}/${oneYearAgoEndDate.toISOString()}?unitGroup=metric&key=${apiKey}`;\n    axios.get(apiUrl).then(response => {\n      setWeatherData(response.data);\n    }).catch(error => {\n      console.error('Error fetching weather data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"1\\uB144 \\uC804 \\uD3C9\\uADE0 \\uAE30\\uC628 \\uBC0F \\uB0A0\\uC528 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), weatherData && weatherData.location && weatherData.days && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC9C0\\uC5ED: \", weatherData.location.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uAE30\\uAC04: \", weatherData.location.localtime, \" - \", weatherData.location.timezone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"1\\uB144 \\uC804 \\uD3C9\\uADE0 \\uAE30\\uC628: \", weatherData.days[0].temp2m.min, \"\\xB0C - \", weatherData.days[0].temp2m.max, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB0A0\\uC528 \\uC0C1\\uD0DC: \", weatherData.days[0].conditions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherInfo, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = WeatherInfo;\nexport default WeatherInfo;\nvar _c;\n$RefreshReg$(_c, \"WeatherInfo\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","WeatherInfo","_s","weatherData","setWeatherData","apiKey","locationName","initialStartDate","Date","oneYearAgoStartDate","setFullYear","getFullYear","initialEndDate","oneYearAgoEndDate","apiUrl","toISOString","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","location","days","name","localtime","timezone","temp2m","min","max","conditions","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/reactstudy/reactstudy/src/components/PlannerWeather.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction WeatherInfo() {\n  const [weatherData, setWeatherData] = useState(null);\n\n  useEffect(() => {\n    const apiKey = 'GBVRL35WHAYYD6B8E4PD84AFX';\n    const locationName = 'Tokyo';\n\n    const initialStartDate = new Date('2023-08-18');\n    const oneYearAgoStartDate = new Date(initialStartDate);\n    oneYearAgoStartDate.setFullYear(oneYearAgoStartDate.getFullYear() - 1);\n    const initialEndDate = new Date('2023-09-08');\n    const oneYearAgoEndDate = new Date(initialEndDate);\n    oneYearAgoEndDate.setFullYear(oneYearAgoEndDate.getFullYear() - 1);\n\n    const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${locationName}/${oneYearAgoStartDate.toISOString()}/${oneYearAgoEndDate.toISOString()}?unitGroup=metric&key=${apiKey}`;\n\n    axios.get(apiUrl)\n      .then(response => {\n        setWeatherData(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching weather data:', error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h2>1년 전 평균 기온 및 날씨 정보</h2>\n      {weatherData && weatherData.location && weatherData.days && (\n        <div>\n          <p>지역: {weatherData.location.name}</p>\n          <p>기간: {weatherData.location.localtime} - {weatherData.location.timezone}</p>\n          <p>1년 전 평균 기온: {weatherData.days[0].temp2m.min}°C - {weatherData.days[0].temp2m.max}°C</p>\n          <p>날씨 상태: {weatherData.days[0].conditions}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WeatherInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}