{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/reactstudy/reactstudy/src/components/PlannerWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PlannerWeather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clothingData = [{\n  temperatureRange: '-10°C ~ 0°C',\n  clothes: '겨울 외투: 패딩, 다운 재킷, 울 코트 등\\n두꺼운 니트웨어 또는 기모 내의\\n목도리, 장갑, 비니 등의 액세서리\\n두꺼운 부츠 또는 방수 부츠'\n}, {\n  temperatureRange: '0°C ~ 10°C',\n  clothes: '겨울 코트 또는 두꺼운 점퍼\\n니트 풀오버 또는 스웨터\\n청바지, 슬랙스 등 따뜻한 팬츠\\n목도리나 비니와 같은 액세서리'\n}, {\n  temperatureRange: '10°C ~ 20°C',\n  clothes: '가벼운 자켓, 블레이저 또는 카디건\\n긴팔 티셔츠, 블라우스, 얇은 니트 등\\n슬랙스, 치노 팬츠, 스커트 등\\n가벼운 스카프 또는 액세서리'\n}, {\n  temperatureRange: '20°C ~ 30°C',\n  clothes: '반팔 티셔츠, 블라우스, 탱크탑 등\\n반바지, 스커트, 가벼운 팬츠 등\\n모자, 선글라스, 선크림 등의 햇빛 차단용품'\n}, {\n  temperatureRange: '30°C ~ 40°C',\n  clothes: '가볍고 통기성 있는 반팔 티셔츠, 원피스 등\\n반바지, 린넨 바지 등\\n모자와 선글라스, 선크림 등의 햇빛 차단용품'\n}];\nconst PlannerWeather = _ref => {\n  _s();\n  let {\n    isOpen,\n    closeModal\n  } = _ref;\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'auto';\n    }\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen]);\n  const [temperature, setTemperature] = useState(20);\n  const handleTemperatureChange = event => {\n    const newTemperature = parseInt(event.target.value);\n    setTemperature(newTemperature);\n  };\n  const getRecommendedClothes = () => {\n    // Your clothing recommendation logic...\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: isOpen ? \"block\" : \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC624\\uB298\\uC758 \\uC637\\uCC28\\uB9BC \\uCD94\\uCC9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: temperature,\n      onChange: handleTemperatureChange,\n      placeholder: \"\\uD604\\uC7AC \\uC628\\uB3C4 (\\xB0C)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommended-clothes\",\n      children: getRecommendedClothes()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://www.weather.go.kr/w/theme/world-weather.do\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"weather-link\",\n      children: \"\\uAE30\\uC0C1\\uCCAD\\uC5D0\\uC11C \\uB0A0\\uC528\\uC815\\uBCF4 \\uD655\\uC778\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: closeModal,\n      children: \"\\uB2EB\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n_s(PlannerWeather, \"S4iDKizEbgzKJTWD1sU7ESQZ3rQ=\");\n_c = PlannerWeather;\nexport default PlannerWeather;\nvar _c;\n$RefreshReg$(_c, \"PlannerWeather\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","clothingData","temperatureRange","clothes","PlannerWeather","_ref","_s","isOpen","closeModal","document","body","style","overflow","temperature","setTemperature","handleTemperatureChange","event","newTemperature","parseInt","target","value","getRecommendedClothes","display","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","className","href","rel","onClick","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/reactstudy/reactstudy/src/components/PlannerWeather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PlannerWeather.css';\n\nconst clothingData = [\n  { temperatureRange: '-10°C ~ 0°C', clothes: '겨울 외투: 패딩, 다운 재킷, 울 코트 등\\n두꺼운 니트웨어 또는 기모 내의\\n목도리, 장갑, 비니 등의 액세서리\\n두꺼운 부츠 또는 방수 부츠' },\n  { temperatureRange: '0°C ~ 10°C', clothes: '겨울 코트 또는 두꺼운 점퍼\\n니트 풀오버 또는 스웨터\\n청바지, 슬랙스 등 따뜻한 팬츠\\n목도리나 비니와 같은 액세서리' },\n  { temperatureRange: '10°C ~ 20°C', clothes: '가벼운 자켓, 블레이저 또는 카디건\\n긴팔 티셔츠, 블라우스, 얇은 니트 등\\n슬랙스, 치노 팬츠, 스커트 등\\n가벼운 스카프 또는 액세서리' },\n  { temperatureRange: '20°C ~ 30°C', clothes: '반팔 티셔츠, 블라우스, 탱크탑 등\\n반바지, 스커트, 가벼운 팬츠 등\\n모자, 선글라스, 선크림 등의 햇빛 차단용품' },\n  { temperatureRange: '30°C ~ 40°C', clothes: '가볍고 통기성 있는 반팔 티셔츠, 원피스 등\\n반바지, 린넨 바지 등\\n모자와 선글라스, 선크림 등의 햇빛 차단용품' },\n];\n\nconst PlannerWeather = ({ isOpen, closeModal }) => {\n    useEffect(() => {\n      if (isOpen) {\n        document.body.style.overflow = 'hidden';\n      } else {\n        document.body.style.overflow = 'auto';\n      }\n  \n      return () => {\n        document.body.style.overflow = 'auto';\n      };\n    }, [isOpen]);\n  \n    const [temperature, setTemperature] = useState(20);\n  \n    const handleTemperatureChange = (event) => {\n      const newTemperature = parseInt(event.target.value);\n      setTemperature(newTemperature);\n    };\n  \n    const getRecommendedClothes = () => {\n      // Your clothing recommendation logic...\n    };\n  \n    return (\n      <div style={{ display: isOpen ? \"block\" : \"none\" }}>\n        <h2>오늘의 옷차림 추천</h2>\n        <input\n          type=\"number\"\n          value={temperature}\n          onChange={handleTemperatureChange}\n          placeholder=\"현재 온도 (°C)\"\n        />\n        <div className=\"recommended-clothes\">\n          {getRecommendedClothes()}\n        </div>\n        <a\n          href=\"https://www.weather.go.kr/w/theme/world-weather.do\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"weather-link\"\n        >\n          기상청에서 날씨정보 확인하기\n        </a>\n        <button onClick={closeModal}>닫기</button>\n      </div>\n    );\n  };\n  \n  export default PlannerWeather;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}