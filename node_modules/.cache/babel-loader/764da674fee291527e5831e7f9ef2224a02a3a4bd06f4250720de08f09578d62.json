{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/reactstudy/reactstudy/src/components/Googlemap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Googlemap = () => {\n  _s();\n  const [originPlaceId, setOriginPlaceId] = useState(\"\");\n  const [destinationPlaceId, setDestinationPlaceId] = useState(\"\");\n  const [travelMode, setTravelMode] = useState(\"WALKING\");\n  const [directionsRenderer, setDirectionsRenderer] = useState(null);\n  useEffect(() => {\n    // 구글 맵을 로드하는 함수를 정의합니다.\n    const initMap = () => {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAyZffxPv5S2NP2NEp_31-HH9XmDwSEWbM&libraries=places&callback=initMapCallback`;\n      script.async = true;\n      script.defer = true;\n      window.initMapCallback = () => {\n        delete window.initMapCallback;\n        const maps = window.google.maps;\n        const map = new maps.Map(document.getElementById(\"map\"), {\n          mapTypeControl: false,\n          center: {\n            lat: -33.8688,\n            lng: 151.2195\n          },\n          zoom: 13\n        });\n        const directionsRenderer = new maps.DirectionsRenderer();\n        directionsRenderer.setMap(map);\n        setDirectionsRenderer(directionsRenderer);\n        const originInput = document.getElementById(\"origin-input\");\n        const destinationInput = document.getElementById(\"destination-input\");\n        const modeSelector = document.getElementById(\"mode-selector\");\n        const originAutocomplete = new maps.places.Autocomplete(originInput, {\n          fields: [\"place_id\", \"description\"]\n        });\n        const destinationAutocomplete = new maps.places.Autocomplete(destinationInput, {\n          fields: [\"place_id\", \"description\"]\n        });\n        setupClickListener(\"changemode-walking\", maps.TravelMode.WALKING);\n        setupClickListener(\"changemode-transit\", maps.TravelMode.TRANSIT);\n        setupClickListener(\"changemode-driving\", maps.TravelMode.DRIVING);\n        setupPlaceChangedListener(originAutocomplete, \"ORIG\");\n        setupPlaceChangedListener(destinationAutocomplete, \"DEST\");\n        map.controls[maps.ControlPosition.TOP_LEFT].push(originInput);\n        map.controls[maps.ControlPosition.TOP_LEFT].push(destinationInput);\n        map.controls[maps.ControlPosition.TOP_LEFT].push(modeSelector);\n      };\n      script.onerror = () => {\n        alert(\"Google Maps API를 불러오는 데 실패했습니다.\");\n      };\n      document.head.appendChild(script);\n    };\n\n    // Google Maps API를 이미 로드한 경우에는 바로 initMap을 호출합니다.\n    if (window.google && window.google.maps && window.google.maps.places) {\n      initMap();\n    }\n  }, []);\n\n  // 기존 코드와 동일한 setupClickListener, setupPlaceChangedListener, route 함수 등을 여기에 작성합니다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"origin-input\",\n      placeholder: \"\\uCD9C\\uBC1C\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"destination-input\",\n      placeholder: \"\\uBAA9\\uC801\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mode-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"type\",\n        id: \"changemode-walking\",\n        defaultChecked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"changemode-walking\",\n        children: \"\\uB3C4\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"type\",\n        id: \"changemode-transit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"changemode-transit\",\n        children: \"\\uB300\\uC911\\uAD50\\uD1B5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"type\",\n        id: \"changemode-driving\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"changemode-driving\",\n        children: \"\\uC790\\uB3D9\\uCC28\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"400px\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Googlemap, \"dFpM5PueUuVFokcfKtucwm8xGFA=\");\n_c = Googlemap;\nexport default Googlemap;\nvar _c;\n$RefreshReg$(_c, \"Googlemap\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Googlemap","_s","originPlaceId","setOriginPlaceId","destinationPlaceId","setDestinationPlaceId","travelMode","setTravelMode","directionsRenderer","setDirectionsRenderer","initMap","script","document","createElement","src","async","defer","window","initMapCallback","maps","google","map","Map","getElementById","mapTypeControl","center","lat","lng","zoom","DirectionsRenderer","setMap","originInput","destinationInput","modeSelector","originAutocomplete","places","Autocomplete","fields","destinationAutocomplete","setupClickListener","TravelMode","WALKING","TRANSIT","DRIVING","setupPlaceChangedListener","controls","ControlPosition","TOP_LEFT","push","onerror","alert","head","appendChild","children","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","name","defaultChecked","htmlFor","style","height","width","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/reactstudy/reactstudy/src/components/Googlemap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Googlemap = () => {\n  const [originPlaceId, setOriginPlaceId] = useState(\"\");\n  const [destinationPlaceId, setDestinationPlaceId] = useState(\"\");\n  const [travelMode, setTravelMode] = useState(\"WALKING\");\n  const [directionsRenderer, setDirectionsRenderer] = useState(null);\n\n  useEffect(() => {\n    // 구글 맵을 로드하는 함수를 정의합니다.\n    const initMap = () => {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAyZffxPv5S2NP2NEp_31-HH9XmDwSEWbM&libraries=places&callback=initMapCallback`;\n      script.async = true;\n      script.defer = true;\n      window.initMapCallback = () => {\n        delete window.initMapCallback;\n        const maps = window.google.maps;\n        const map = new maps.Map(document.getElementById(\"map\"), {\n          mapTypeControl: false,\n          center: { lat: -33.8688, lng: 151.2195 },\n          zoom: 13,\n        });\n\n        const directionsRenderer = new maps.DirectionsRenderer();\n        directionsRenderer.setMap(map);\n        setDirectionsRenderer(directionsRenderer);\n\n        const originInput = document.getElementById(\"origin-input\");\n        const destinationInput = document.getElementById(\"destination-input\");\n        const modeSelector = document.getElementById(\"mode-selector\");\n\n        const originAutocomplete = new maps.places.Autocomplete(\n          originInput,\n          { fields: [\"place_id\", \"description\"] },\n        );\n\n        const destinationAutocomplete = new maps.places.Autocomplete(\n          destinationInput,\n          { fields: [\"place_id\", \"description\"] },\n        );\n\n        setupClickListener(\"changemode-walking\", maps.TravelMode.WALKING);\n        setupClickListener(\"changemode-transit\", maps.TravelMode.TRANSIT);\n        setupClickListener(\"changemode-driving\", maps.TravelMode.DRIVING);\n        setupPlaceChangedListener(originAutocomplete, \"ORIG\");\n        setupPlaceChangedListener(destinationAutocomplete, \"DEST\");\n\n        map.controls[maps.ControlPosition.TOP_LEFT].push(originInput);\n        map.controls[maps.ControlPosition.TOP_LEFT].push(destinationInput);\n        map.controls[maps.ControlPosition.TOP_LEFT].push(modeSelector);\n      };\n      script.onerror = () => {\n        alert(\"Google Maps API를 불러오는 데 실패했습니다.\");\n      };\n      document.head.appendChild(script);\n    };\n\n    // Google Maps API를 이미 로드한 경우에는 바로 initMap을 호출합니다.\n    if (window.google && window.google.maps && window.google.maps.places) {\n      initMap();\n    }\n  }, []);\n\n  // 기존 코드와 동일한 setupClickListener, setupPlaceChangedListener, route 함수 등을 여기에 작성합니다.\n\n  return (\n    <div>\n      <input id=\"origin-input\" placeholder=\"출발지\" />\n      <input id=\"destination-input\" placeholder=\"목적지\" />\n      <div id=\"mode-selector\">\n        <input\n          type=\"radio\"\n          name=\"type\"\n          id=\"changemode-walking\"\n          defaultChecked\n        />\n        <label htmlFor=\"changemode-walking\">도보</label>\n        <input type=\"radio\" name=\"type\" id=\"changemode-transit\" />\n        <label htmlFor=\"changemode-transit\">대중교통</label>\n        <input type=\"radio\" name=\"type\" id=\"changemode-driving\" />\n        <label htmlFor=\"changemode-driving\">자동차</label>\n      </div>\n      <div id=\"map\" style={{ height: \"400px\", width: \"100%\" }}></div>\n    </div>\n  );\n};\n\nexport default Googlemap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}