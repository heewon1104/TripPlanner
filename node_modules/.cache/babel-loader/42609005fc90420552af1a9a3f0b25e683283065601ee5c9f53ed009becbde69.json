{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/reactstudy/reactstudy/src/components/Locationtest.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './Locationtest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Locationtest() {\n  _s();\n  useEffect(() => {\n    function initMap() {\n      const map = new window.google.maps.Map(document.getElementById(\"map\"), {\n        center: {\n          lat: 40.749933,\n          lng: -73.98633\n        },\n        zoom: 13,\n        mapTypeControl: false\n      });\n      const card = document.getElementById(\"pac-card\");\n      const input = document.getElementById(\"pac-input\");\n      const biasInputElement = document.getElementById(\"use-location-bias\");\n      const strictBoundsInputElement = document.getElementById(\"use-strict-bounds\");\n      const options = {\n        fields: [\"formatted_address\", \"geometry\", \"name\"],\n        strictBounds: false\n      };\n      map.controls[window.google.maps.ControlPosition.TOP_LEFT].push(card);\n      const autocomplete = new window.google.maps.places.Autocomplete(input, options);\n\n      // Bind the map's bounds (viewport) property to the autocomplete object,\n      // so that the autocomplete requests use the current map bounds for the\n      // bounds option in the request.\n      autocomplete.bindTo(\"bounds\", map);\n      const infowindow = new window.google.maps.InfoWindow();\n      const infowindowContent = document.getElementById(\"infowindow-content\");\n      infowindow.setContent(infowindowContent);\n      const marker = new window.google.maps.Marker({\n        map,\n        anchorPoint: new window.google.maps.Point(0, -29)\n      });\n      autocomplete.addListener(\"place_changed\", () => {\n        infowindow.close();\n        marker.setVisible(false);\n        const place = autocomplete.getPlace();\n        if (!place.geometry || !place.geometry.location) {\n          // User entered the name of a Place that was not suggested and\n          // pressed the Enter key, or the Place Details request failed.\n          window.alert(\"No details available for input: '\" + place.name + \"'\");\n          return;\n        }\n\n        // If the place has a geometry, then present it on a map.\n        if (place.geometry.viewport) {\n          map.fitBounds(place.geometry.viewport);\n        } else {\n          map.setCenter(place.geometry.location);\n          map.setZoom(17);\n        }\n        marker.setPosition(place.geometry.location);\n        marker.setVisible(true);\n        infowindowContent.children[\"place-name\"].textContent = place.name;\n        infowindowContent.children[\"place-address\"].textContent = place.formatted_address;\n        infowindow.open(map, marker);\n      });\n\n      // Sets a listener on a radio button to change the filter type on Places\n      // Autocomplete.\n      function setupClickListener(id, types) {\n        const radioButton = document.getElementById(id);\n        radioButton.addEventListener(\"click\", () => {\n          autocomplete.setTypes(types);\n          input.value = \"\";\n        });\n      }\n      setupClickListener(\"changetype-all\", []);\n      setupClickListener(\"changetype-address\", [\"address\"]);\n      setupClickListener(\"changetype-establishment\", [\"establishment\"]);\n      setupClickListener(\"changetype-geocode\", [\"geocode\"]);\n      setupClickListener(\"changetype-cities\", [\"(cities)\"]);\n      setupClickListener(\"changetype-regions\", [\"(regions)\"]);\n      biasInputElement.addEventListener(\"change\", () => {\n        if (biasInputElement.checked) {\n          autocomplete.bindTo(\"bounds\", map);\n        } else {\n          // User wants to turn off location bias, so three things need to happen:\n          // 1. Unbind from map\n          // 2. Reset the bounds to whole world\n          // 3. Uncheck the strict bounds checkbox UI (which also disables strict bounds)\n          autocomplete.unbind(\"bounds\");\n          autocomplete.setBounds({\n            east: 180,\n            west: -180,\n            north: 90,\n            south: -90\n          });\n          strictBoundsInputElement.checked = biasInputElement.checked;\n        }\n        input.value = \"\";\n      });\n      strictBoundsInputElement.addEventListener(\"change\", () => {\n        autocomplete.setOptions({\n          strictBounds: strictBoundsInputElement.checked\n        });\n        if (strictBoundsInputElement.checked) {\n          biasInputElement.checked = strictBoundsInputElement.checked;\n          autocomplete.bindTo(\"bounds\", map);\n        }\n        input.value = \"\";\n      });\n    }\n\n    // Load Google Maps API script and call initMap() when loaded\n    const script = document.createElement(\"script\");\n    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAyZffxPv5S2NP2NEp_31-HH9XmDwSEWbM&libraries=places`;\n    script.defer = true;\n    script.onload = initMap; // API 스크립트 로드 후 initMap() 실행\n    document.body.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Place Autocomplete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"https://polyfill.io/v3/polyfill.min.js?features=default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        type: \"module\",\n        src: \"./index.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(Locationtest, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Locationtest;\nexport default Locationtest;\nvar _c;\n$RefreshReg$(_c, \"Locationtest\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Locationtest","_s","initMap","map","window","google","maps","Map","document","getElementById","center","lat","lng","zoom","mapTypeControl","card","input","biasInputElement","strictBoundsInputElement","options","fields","strictBounds","controls","ControlPosition","TOP_LEFT","push","autocomplete","places","Autocomplete","bindTo","infowindow","InfoWindow","infowindowContent","setContent","marker","Marker","anchorPoint","Point","addListener","close","setVisible","place","getPlace","geometry","location","alert","name","viewport","fitBounds","setCenter","setZoom","setPosition","children","textContent","formatted_address","open","setupClickListener","id","types","radioButton","addEventListener","setTypes","value","checked","unbind","setBounds","east","west","north","south","setOptions","script","createElement","src","defer","onload","body","appendChild","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/reactstudy/reactstudy/src/components/Locationtest.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './Locationtest.css';\n\nfunction Locationtest() {\n  useEffect(() => {\n    function initMap() {\n      const map = new window.google.maps.Map(document.getElementById(\"map\"), {\n        center: { lat: 40.749933, lng: -73.98633 },\n        zoom: 13,\n        mapTypeControl: false,\n      });\n      const card = document.getElementById(\"pac-card\");\n      const input = document.getElementById(\"pac-input\");\n      const biasInputElement = document.getElementById(\"use-location-bias\");\n      const strictBoundsInputElement = document.getElementById(\"use-strict-bounds\");\n      const options = {\n        fields: [\"formatted_address\", \"geometry\", \"name\"],\n        strictBounds: false,\n      };\n\n      map.controls[window.google.maps.ControlPosition.TOP_LEFT].push(card);\n\n      const autocomplete = new window.google.maps.places.Autocomplete(input, options);\n\n      // Bind the map's bounds (viewport) property to the autocomplete object,\n      // so that the autocomplete requests use the current map bounds for the\n      // bounds option in the request.\n      autocomplete.bindTo(\"bounds\", map);\n\n      const infowindow = new window.google.maps.InfoWindow();\n      const infowindowContent = document.getElementById(\"infowindow-content\");\n\n      infowindow.setContent(infowindowContent);\n\n      const marker = new window.google.maps.Marker({\n        map,\n        anchorPoint: new window.google.maps.Point(0, -29),\n      });\n\n      autocomplete.addListener(\"place_changed\", () => {\n        infowindow.close();\n        marker.setVisible(false);\n\n        const place = autocomplete.getPlace();\n\n        if (!place.geometry || !place.geometry.location) {\n          // User entered the name of a Place that was not suggested and\n          // pressed the Enter key, or the Place Details request failed.\n          window.alert(\"No details available for input: '\" + place.name + \"'\");\n          return;\n        }\n\n        // If the place has a geometry, then present it on a map.\n        if (place.geometry.viewport) {\n          map.fitBounds(place.geometry.viewport);\n        } else {\n          map.setCenter(place.geometry.location);\n          map.setZoom(17);\n        }\n\n        marker.setPosition(place.geometry.location);\n        marker.setVisible(true);\n        infowindowContent.children[\"place-name\"].textContent = place.name;\n        infowindowContent.children[\"place-address\"].textContent =\n          place.formatted_address;\n        infowindow.open(map, marker);\n      });\n\n      // Sets a listener on a radio button to change the filter type on Places\n      // Autocomplete.\n      function setupClickListener(id, types) {\n        const radioButton = document.getElementById(id);\n\n        radioButton.addEventListener(\"click\", () => {\n          autocomplete.setTypes(types);\n          input.value = \"\";\n        });\n      }\n\n      setupClickListener(\"changetype-all\", []);\n      setupClickListener(\"changetype-address\", [\"address\"]);\n      setupClickListener(\"changetype-establishment\", [\"establishment\"]);\n      setupClickListener(\"changetype-geocode\", [\"geocode\"]);\n      setupClickListener(\"changetype-cities\", [\"(cities)\"]);\n      setupClickListener(\"changetype-regions\", [\"(regions)\"]);\n      biasInputElement.addEventListener(\"change\", () => {\n        if (biasInputElement.checked) {\n          autocomplete.bindTo(\"bounds\", map);\n        } else {\n          // User wants to turn off location bias, so three things need to happen:\n          // 1. Unbind from map\n          // 2. Reset the bounds to whole world\n          // 3. Uncheck the strict bounds checkbox UI (which also disables strict bounds)\n          autocomplete.unbind(\"bounds\");\n          autocomplete.setBounds({ east: 180, west: -180, north: 90, south: -90 });\n          strictBoundsInputElement.checked = biasInputElement.checked;\n        }\n\n        input.value = \"\";\n      });\n      strictBoundsInputElement.addEventListener(\"change\", () => {\n        autocomplete.setOptions({\n          strictBounds: strictBoundsInputElement.checked,\n        });\n        if (strictBoundsInputElement.checked) {\n          biasInputElement.checked = strictBoundsInputElement.checked;\n          autocomplete.bindTo(\"bounds\", map);\n        }\n\n        input.value = \"\";\n      });\n    }\n\n    // Load Google Maps API script and call initMap() when loaded\n    const script = document.createElement(\"script\");\n    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAyZffxPv5S2NP2NEp_31-HH9XmDwSEWbM&libraries=places`;\n    script.defer = true;\n    script.onload = initMap; // API 스크립트 로드 후 initMap() 실행\n    document.body.appendChild(script);\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <title>Place Autocomplete</title>\n        <script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\n        <script type=\"module\" src=\"./index.js\"></script>\n      </div>\n      <div>\n        {/* 나머지 리턴 부분은 원래 코드와 동일 */}\n      </div>\n    </div>\n  );\n}\n\nexport default Locationtest;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}