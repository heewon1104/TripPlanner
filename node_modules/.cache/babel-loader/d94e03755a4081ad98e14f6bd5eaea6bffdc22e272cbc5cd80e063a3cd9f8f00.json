{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/reactstudy/reactstudy/src/components/Googlemap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Googlemap = () => {\n  _s();\n  const [originPlaceId, setOriginPlaceId] = useState(\"\");\n  const [destinationPlaceId, setDestinationPlaceId] = useState(\"\");\n  const [travelMode, setTravelMode] = useState(google.maps.TravelMode.WALKING);\n  const [directionsRenderer, setDirectionsRenderer] = useState(null);\n  src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAyZffxPv5S2NP2NEp_31-HH9XmDwSEWbM&libraries=places\";\n  useEffect(() => {\n    const map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      mapTypeControl: false,\n      center: {\n        lat: -33.8688,\n        lng: 151.2195\n      },\n      zoom: 13\n    });\n    const directionsRenderer = new google.maps.DirectionsRenderer();\n    directionsRenderer.setMap(map);\n    setDirectionsRenderer(directionsRenderer);\n    const originInput = document.getElementById(\"origin-input\");\n    const destinationInput = document.getElementById(\"destination-input\");\n    const modeSelector = document.getElementById(\"mode-selector\");\n    const originAutocomplete = new google.maps.places.Autocomplete(originInput, {\n      fields: [\"place_id\"]\n    });\n    const destinationAutocomplete = new google.maps.places.Autocomplete(destinationInput, {\n      fields: [\"place_id\"]\n    });\n    setupClickListener(\"changemode-walking\", google.maps.TravelMode.WALKING);\n    setupClickListener(\"changemode-transit\", google.maps.TravelMode.TRANSIT);\n    setupClickListener(\"changemode-driving\", google.maps.TravelMode.DRIVING);\n    setupPlaceChangedListener(originAutocomplete, \"ORIG\");\n    setupPlaceChangedListener(destinationAutocomplete, \"DEST\");\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);\n  }, []);\n  const setupClickListener = (id, mode) => {\n    const radioButton = document.getElementById(id);\n    radioButton.addEventListener(\"click\", () => {\n      setTravelMode(mode);\n      route();\n    });\n  };\n  const setupPlaceChangedListener = (autocomplete, mode) => {\n    autocomplete.bindTo(\"bounds\", google.map);\n    autocomplete.addListener(\"place_changed\", () => {\n      const place = autocomplete.getPlace();\n      if (!place.place_id) {\n        window.alert(\"Please select an option from the dropdown list.\");\n        return;\n      }\n      if (mode === \"ORIG\") {\n        setOriginPlaceId(place.place_id);\n      } else {\n        setDestinationPlaceId(place.place_id);\n      }\n      route();\n    });\n  };\n  const route = () => {\n    if (!originPlaceId || !destinationPlaceId) {\n      return;\n    }\n    const directionsService = new google.maps.DirectionsService();\n    directionsService.route({\n      origin: {\n        placeId: originPlaceId\n      },\n      destination: {\n        placeId: destinationPlaceId\n      },\n      travelMode: travelMode\n    }, (response, status) => {\n      if (status === \"OK\") {\n        directionsRenderer.setDirections(response);\n      } else {\n        window.alert(\"Directions request failed due to \" + status);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"origin-input\",\n      placeholder: \"Origin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"destination-input\",\n      placeholder: \"Destination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mode-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"type\",\n        id: \"changemode-walking\",\n        defaultChecked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"changemode-walking\",\n        children: \"Walking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"type\",\n        id: \"changemode-transit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"changemode-transit\",\n        children: \"Transit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"type\",\n        id: \"changemode-driving\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"changemode-driving\",\n        children: \"Driving\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"400px\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Googlemap, \"XajTgaWv9hOuU0UbVUSJGMbO6ak=\");\n_c = Googlemap;\nexport default Googlemap;\nvar _c;\n$RefreshReg$(_c, \"Googlemap\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Googlemap","_s","originPlaceId","setOriginPlaceId","destinationPlaceId","setDestinationPlaceId","travelMode","setTravelMode","google","maps","TravelMode","WALKING","directionsRenderer","setDirectionsRenderer","src","map","window","Map","document","getElementById","mapTypeControl","center","lat","lng","zoom","DirectionsRenderer","setMap","originInput","destinationInput","modeSelector","originAutocomplete","places","Autocomplete","fields","destinationAutocomplete","setupClickListener","TRANSIT","DRIVING","setupPlaceChangedListener","controls","ControlPosition","TOP_LEFT","push","id","mode","radioButton","addEventListener","route","autocomplete","bindTo","addListener","place","getPlace","place_id","alert","directionsService","DirectionsService","origin","placeId","destination","response","status","setDirections","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","name","defaultChecked","htmlFor","style","height","width","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/reactstudy/reactstudy/src/components/Googlemap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Googlemap = () => {\n  const [originPlaceId, setOriginPlaceId] = useState(\"\");\n  const [destinationPlaceId, setDestinationPlaceId] = useState(\"\");\n  const [travelMode, setTravelMode] = useState(google.maps.TravelMode.WALKING);\n  const [directionsRenderer, setDirectionsRenderer] = useState(null);\n\n  src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAyZffxPv5S2NP2NEp_31-HH9XmDwSEWbM&libraries=places\"\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(document.getElementById(\"map\"),{\n      mapTypeControl: false,\n      center: { lat: -33.8688, lng: 151.2195 },\n      zoom: 13,\n    });\n\n    const directionsRenderer = new google.maps.DirectionsRenderer();\n    directionsRenderer.setMap(map);\n    setDirectionsRenderer(directionsRenderer);\n\n    const originInput = document.getElementById(\"origin-input\");\n    const destinationInput = document.getElementById(\"destination-input\");\n    const modeSelector = document.getElementById(\"mode-selector\");\n\n    const originAutocomplete = new google.maps.places.Autocomplete(\n      originInput,\n      { fields: [\"place_id\"] },\n    );\n\n    const destinationAutocomplete = new google.maps.places.Autocomplete(\n      destinationInput,\n      { fields: [\"place_id\"] },\n    );\n\n    setupClickListener(\"changemode-walking\", google.maps.TravelMode.WALKING);\n    setupClickListener(\"changemode-transit\", google.maps.TravelMode.TRANSIT);\n    setupClickListener(\"changemode-driving\", google.maps.TravelMode.DRIVING);\n    setupPlaceChangedListener(originAutocomplete, \"ORIG\");\n    setupPlaceChangedListener(destinationAutocomplete, \"DEST\");\n\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);\n  }, []);\n\n  const setupClickListener = (id, mode) => {\n    const radioButton = document.getElementById(id);\n\n    radioButton.addEventListener(\"click\", () => {\n      setTravelMode(mode);\n      route();\n    });\n  };\n\n  const setupPlaceChangedListener = (autocomplete, mode) => {\n    autocomplete.bindTo(\"bounds\", google.map);\n    autocomplete.addListener(\"place_changed\", () => {\n      const place = autocomplete.getPlace();\n\n      if (!place.place_id) {\n        window.alert(\"Please select an option from the dropdown list.\");\n        return;\n      }\n\n      if (mode === \"ORIG\") {\n        setOriginPlaceId(place.place_id);\n      } else {\n        setDestinationPlaceId(place.place_id);\n      }\n\n      route();\n    });\n  };\n\n  const route = () => {\n    if (!originPlaceId || !destinationPlaceId) {\n      return;\n    }\n\n    const directionsService = new google.maps.DirectionsService();\n    directionsService.route(\n      {\n        origin: { placeId: originPlaceId },\n        destination: { placeId: destinationPlaceId },\n        travelMode: travelMode,\n      },\n      (response, status) => {\n        if (status === \"OK\") {\n          directionsRenderer.setDirections(response);\n        } else {\n          window.alert(\"Directions request failed due to \" + status);\n        }\n      },\n    );\n  };\n\n  return (\n    <div>\n      <input id=\"origin-input\" placeholder=\"Origin\" />\n      <input id=\"destination-input\" placeholder=\"Destination\" />\n      <div id=\"mode-selector\">\n        <input\n          type=\"radio\"\n          name=\"type\"\n          id=\"changemode-walking\"\n          defaultChecked\n        />\n        <label htmlFor=\"changemode-walking\">Walking</label>\n        <input type=\"radio\" name=\"type\" id=\"changemode-transit\" />\n        <label htmlFor=\"changemode-transit\">Transit</label>\n        <input type=\"radio\" name=\"type\" id=\"changemode-driving\" />\n        <label htmlFor=\"changemode-driving\">Driving</label>\n      </div>\n      <div id=\"map\" style={{ height: \"400px\", width: \"100%\" }}></div>\n    </div>\n  );\n};\n\nexport default Googlemap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}